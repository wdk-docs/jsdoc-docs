# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2019, BandCap
# This file is distributed under the same license as the jsdoc-docs package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2019.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: jsdoc-docs \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2019-05-21 23:34+0800\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.6.0\n"

#: ../../source/tags/index.rst:8
msgid "Block Tags"
msgstr "块标签"

#: ../../source/tags/index.rst:80
msgid "Inline Tags"
msgstr "内联标签"

#: ../../source/tags/index.rst:2
msgid "Tags"
msgstr "标签"

#: ../../source/tags/index.rst:6
msgid "jsdoc 的标签 以 @ 开头 如 @access"
msgstr ""

#: ../../source/tags/index.rst:88
msgid "待处理"
msgstr "待处理"

#: ../../source/tags/index.rst:90
#, fuzzy
msgid "清理    :caption: Adding a plugin to JSDoc’s configuration file"
msgstr "清理 Adding a plugin to JSDoc’s configuration file"

#: ../../source/tags/tags-abstract.rst:3
msgid "@abstract (synonyms: @virtual)"
msgstr ""

#: ../../source/tags/tags-abstract.rst ../../source/tags/tags-augments.rst
#: ../../source/tags/tags-class.rst ../../source/tags/tags-constant.rst
#: ../../source/tags/tags-default.rst ../../source/tags/tags-description.rst
#: ../../source/tags/tags-external.rst ../../source/tags/tags-file.rst
#: ../../source/tags/tags-fires.rst ../../source/tags/tags-function.rst
#: ../../source/tags/tags-inline-link.rst ../../source/tags/tags-member.rst
#: ../../source/tags/tags-param.rst ../../source/tags/tags-returns.rst
#: ../../source/tags/tags-throws.rst ../../source/tags/tags-yields.rst
msgid "Synonyms"
msgstr "同义词"

#: ../../source/tags/tags-abstract.rst:7
msgid ":rst:dir:`@virtual`"
msgstr ""

#: ../../source/tags/tags-abstract.rst ../../source/tags/tags-access.rst
#: ../../source/tags/tags-alias.rst ../../source/tags/tags-async.rst
#: ../../source/tags/tags-augments.rst ../../source/tags/tags-author.rst
#: ../../source/tags/tags-borrows.rst ../../source/tags/tags-callback.rst
#: ../../source/tags/tags-class.rst ../../source/tags/tags-classdesc.rst
#: ../../source/tags/tags-constant.rst ../../source/tags/tags-constructs.rst
#: ../../source/tags/tags-copyright.rst ../../source/tags/tags-default.rst
#: ../../source/tags/tags-description.rst ../../source/tags/tags-enum.rst
#: ../../source/tags/tags-event.rst ../../source/tags/tags-example.rst
#: ../../source/tags/tags-exports.rst ../../source/tags/tags-external.rst
#: ../../source/tags/tags-file.rst ../../source/tags/tags-fires.rst
#: ../../source/tags/tags-function.rst ../../source/tags/tags-generator.rst
#: ../../source/tags/tags-global.rst ../../source/tags/tags-hideconstructor.rst
#: ../../source/tags/tags-ignore.rst ../../source/tags/tags-implements.rst
#: ../../source/tags/tags-inheritdoc.rst ../../source/tags/tags-inline-link.rst
#: ../../source/tags/tags-inline-tutorial.rst ../../source/tags/tags-inner.rst
#: ../../source/tags/tags-instance.rst ../../source/tags/tags-interface.rst
#: ../../source/tags/tags-kind.rst ../../source/tags/tags-lends.rst
#: ../../source/tags/tags-license.rst ../../source/tags/tags-listens.rst
#: ../../source/tags/tags-member.rst ../../source/tags/tags-memberof.rst
#: ../../source/tags/tags-mixes.rst ../../source/tags/tags-mixin.rst
#: ../../source/tags/tags-module.rst ../../source/tags/tags-name.rst
#: ../../source/tags/tags-namespace.rst ../../source/tags/tags-override.rst
#: ../../source/tags/tags-package.rst ../../source/tags/tags-param.rst
#: ../../source/tags/tags-private.rst ../../source/tags/tags-property.rst
#: ../../source/tags/tags-protected.rst ../../source/tags/tags-public.rst
#: ../../source/tags/tags-readonly.rst ../../source/tags/tags-requires.rst
#: ../../source/tags/tags-returns.rst ../../source/tags/tags-see.rst
#: ../../source/tags/tags-since.rst ../../source/tags/tags-static.rst
#: ../../source/tags/tags-summary.rst ../../source/tags/tags-this.rst
#: ../../source/tags/tags-throws.rst ../../source/tags/tags-todo.rst
#: ../../source/tags/tags-tutorial.rst ../../source/tags/tags-type.rst
#: ../../source/tags/tags-typedef.rst ../../source/tags/tags-variation.rst
#: ../../source/tags/tags-version.rst ../../source/tags/tags-yields.rst
msgid "Overview"
msgstr "概述"

#: ../../source/tags/tags-abstract.rst:8
msgid ""
"The @abstract tag identifies members that must be implemented (or "
"overridden) by objects that inherit the member."
msgstr "@abstract标记标识必须由继承该成员的对象实现(或覆盖)的成员. "

#: ../../source/tags/tags-abstract.rst ../../source/tags/tags-async.rst
#: ../../source/tags/tags-file.rst ../../source/tags/tags-generator.rst
#: ../../source/tags/tags-listens.rst ../../source/tags/tags-override.rst
msgid "Example"
msgstr "示例"

#: ../../source/tags/tags-abstract.rst:11
msgid ""
"Parent class with abstract method, and child class that implements the "
"method"
msgstr "具有抽象方法的父类和实现该方法的子类"

#: ../../source/tags/tags-abstract.rst:46
#, fuzzy
msgid ":rst:dir:`@abstract`"
msgstr ""

#: ../../source/tags/tags-access.rst:2
msgid "@access"
msgstr ""

#: ../../source/tags/tags-access.rst ../../source/tags/tags-alias.rst
#: ../../source/tags/tags-async.rst ../../source/tags/tags-augments.rst
#: ../../source/tags/tags-author.rst ../../source/tags/tags-borrows.rst
#: ../../source/tags/tags-callback.rst ../../source/tags/tags-class.rst
#: ../../source/tags/tags-classdesc.rst ../../source/tags/tags-constant.rst
#: ../../source/tags/tags-constructs.rst ../../source/tags/tags-copyright.rst
#: ../../source/tags/tags-default.rst ../../source/tags/tags-description.rst
#: ../../source/tags/tags-enum.rst ../../source/tags/tags-event.rst
#: ../../source/tags/tags-example.rst ../../source/tags/tags-exports.rst
#: ../../source/tags/tags-external.rst ../../source/tags/tags-fires.rst
#: ../../source/tags/tags-function.rst ../../source/tags/tags-generator.rst
#: ../../source/tags/tags-global.rst ../../source/tags/tags-hideconstructor.rst
#: ../../source/tags/tags-ignore.rst ../../source/tags/tags-implements.rst
#: ../../source/tags/tags-inheritdoc.rst ../../source/tags/tags-inline-link.rst
#: ../../source/tags/tags-inline-tutorial.rst ../../source/tags/tags-inner.rst
#: ../../source/tags/tags-instance.rst ../../source/tags/tags-interface.rst
#: ../../source/tags/tags-kind.rst ../../source/tags/tags-lends.rst
#: ../../source/tags/tags-license.rst ../../source/tags/tags-listens.rst
#: ../../source/tags/tags-member.rst ../../source/tags/tags-memberof.rst
#: ../../source/tags/tags-mixes.rst ../../source/tags/tags-mixin.rst
#: ../../source/tags/tags-module.rst ../../source/tags/tags-name.rst
#: ../../source/tags/tags-namespace.rst ../../source/tags/tags-override.rst
#: ../../source/tags/tags-package.rst ../../source/tags/tags-private.rst
#: ../../source/tags/tags-protected.rst ../../source/tags/tags-public.rst
#: ../../source/tags/tags-readonly.rst ../../source/tags/tags-requires.rst
#: ../../source/tags/tags-returns.rst ../../source/tags/tags-see.rst
#: ../../source/tags/tags-since.rst ../../source/tags/tags-static.rst
#: ../../source/tags/tags-summary.rst ../../source/tags/tags-this.rst
#: ../../source/tags/tags-throws.rst ../../source/tags/tags-todo.rst
#: ../../source/tags/tags-tutorial.rst ../../source/tags/tags-type.rst
#: ../../source/tags/tags-typedef.rst ../../source/tags/tags-variation.rst
#: ../../source/tags/tags-version.rst ../../source/tags/tags-yields.rst
msgid "Syntax"
msgstr "语法"

#: ../../source/tags/tags-access.rst:6
msgid "``@access <package|private|protected|public>``"
msgstr "``@access <package|private|protected|public>``"

#: ../../source/tags/tags-access.rst:9
#, fuzzy
msgid ""
"The :rst:dir:`@access` tag specifies the access level of a member. You "
"can use the :rst:dir:`@access` tag as a synonym for other tags:"
msgstr "``@access`` 标签指定成员的访问级别. 您可以使用 ``@access`` 标记作为其他标记的同义词: "

#: ../../source/tags/tags-access.rst:12
#, fuzzy
msgid ""
"``@access package`` is the same as :rst:dir:`@package`. This option is "
"available in JSDoc 3.5.0 and later."
msgstr "``@access package`` 与 ``@package`` 相同.  JSDoc 3.5.0及更高版本中提供了此选项. "

#: ../../source/tags/tags-access.rst:14
#, fuzzy
msgid "``@access private`` is the same as :rst:dir:`@private`."
msgstr "``@access private`` 与 ``@private`` 相同. "

#: ../../source/tags/tags-access.rst:15
#, fuzzy
msgid "``@access protected`` is the same as :rst:dir:`@protected`."
msgstr "``@access protected`` 与 ``@protected`` 相同. "

#: ../../source/tags/tags-access.rst:16
#, fuzzy
msgid "``@access public`` is the same as :rst:dir:`@public`."
msgstr "``@access public`` 与 ``@public`` 相同. "

#: ../../source/tags/tags-access.rst:18
#, fuzzy
msgid ""
"Private members are not shown in the generated output unless JSDoc is run"
" with the ``-p/--private`` command-line option. In JSDoc 3.3.0 and later,"
" you can also use the ``-a/--access`` :ref:`command-line` to change this "
"behavior."
msgstr ""
"除非JSDoc使用 ``-p/--private`` 命令行选项运行, 否则私有成员不会显示在生成的输出中. 在JSDoc "
"3.3.0及更高版本中, 您还可以使用 ``-a/--access`` `命令行选项 <about-commandline.html>`_ "
"来更改此行为. "

#: ../../source/tags/tags-access.rst:22
#, fuzzy
msgid ""
"Note that a doclet’s *access level* is different from its *scope*. For "
"example, if ``Parent`` has an inner variable named ``child`` that is "
"documented as :rst:dir:`@public`, the ``child`` variable will still be "
"treated as an inner variable with the namepath ``Parent~child``. In other"
" words, the ``child`` variable will have an inner scope, even though the "
"variable is public. To change a doclet’s scope, use the "
":rst:dir:`@instance`, :rst:dir:`@static`, and :rst:dir:`@global` tags."
msgstr ""
"请注意, doclet的 *访问级别* 与其 *范围* 不同. 例如, 如果 ``Parent`` 有一个名为 ``child`` 的内部变量, "
"记为 ``@public``, 那么 ``child`` 变量仍将被视为一个内部变量, 其名称为 ``Parent~child``. 换句话说, "
"即使变量是公共的, ``child`` 变量也会有一个内部范围. 要更改doclet的范围, 请使用 `@instance <tags-"
"instance.html>`_, `@static <tags-static.html>`_ 和 `@global <tags-"
"global.html>`_ 标记. "

#: ../../source/tags/tags-access.rst ../../source/tags/tags-alias.rst
#: ../../source/tags/tags-augments.rst ../../source/tags/tags-author.rst
#: ../../source/tags/tags-borrows.rst ../../source/tags/tags-callback.rst
#: ../../source/tags/tags-class.rst ../../source/tags/tags-classdesc.rst
#: ../../source/tags/tags-constant.rst ../../source/tags/tags-constructs.rst
#: ../../source/tags/tags-copyright.rst ../../source/tags/tags-default.rst
#: ../../source/tags/tags-description.rst ../../source/tags/tags-enum.rst
#: ../../source/tags/tags-event.rst ../../source/tags/tags-example.rst
#: ../../source/tags/tags-exports.rst ../../source/tags/tags-external.rst
#: ../../source/tags/tags-fires.rst ../../source/tags/tags-function.rst
#: ../../source/tags/tags-global.rst ../../source/tags/tags-hideconstructor.rst
#: ../../source/tags/tags-ignore.rst ../../source/tags/tags-implements.rst
#: ../../source/tags/tags-inheritdoc.rst ../../source/tags/tags-inline-link.rst
#: ../../source/tags/tags-inline-tutorial.rst ../../source/tags/tags-inner.rst
#: ../../source/tags/tags-instance.rst ../../source/tags/tags-interface.rst
#: ../../source/tags/tags-kind.rst ../../source/tags/tags-lends.rst
#: ../../source/tags/tags-license.rst ../../source/tags/tags-member.rst
#: ../../source/tags/tags-memberof.rst ../../source/tags/tags-mixes.rst
#: ../../source/tags/tags-mixin.rst ../../source/tags/tags-module.rst
#: ../../source/tags/tags-name.rst ../../source/tags/tags-namespace.rst
#: ../../source/tags/tags-package.rst ../../source/tags/tags-param.rst
#: ../../source/tags/tags-private.rst ../../source/tags/tags-property.rst
#: ../../source/tags/tags-protected.rst ../../source/tags/tags-public.rst
#: ../../source/tags/tags-readonly.rst ../../source/tags/tags-requires.rst
#: ../../source/tags/tags-returns.rst ../../source/tags/tags-see.rst
#: ../../source/tags/tags-since.rst ../../source/tags/tags-static.rst
#: ../../source/tags/tags-summary.rst ../../source/tags/tags-this.rst
#: ../../source/tags/tags-throws.rst ../../source/tags/tags-todo.rst
#: ../../source/tags/tags-tutorial.rst ../../source/tags/tags-type.rst
#: ../../source/tags/tags-typedef.rst ../../source/tags/tags-variation.rst
#: ../../source/tags/tags-version.rst ../../source/tags/tags-yields.rst
msgid "Examples"
msgstr "示例"

#: ../../source/tags/tags-access.rst:34
#, fuzzy
msgid "Using @access as a synonym for other tags"
msgstr "使用@access作为其他标记的同义词"

#: ../../source/tags/tags-alias.rst:2
msgid "@alias"
msgstr "@alias"

#: ../../source/tags/tags-alias.rst:6
msgid "``@alias <aliasNamepath>``"
msgstr "``@alias <aliasNamepath>``"

#: ../../source/tags/tags-alias.rst:9
#, fuzzy
msgid ""
"The :rst:dir:`@alias` tag causes JSDoc to treat all references to a "
"member as if the member had a different name. This tag is especially "
"useful if you define a class within an inner function; in this case, you "
"can use the :rst:dir:`@alias` tag to tell JSDoc how the class is exposed "
"in your app."
msgstr ""
"@alias标记使JSDoc处理对成员的所有引用, 就好像该成员具有不同的名称一样. 如果在内部函数中定义类, 则此标记特别有用;在这种情况下, "
"您可以使用@alias标记告诉JSDoc如何在您的应用程序中公开该类. "

#: ../../source/tags/tags-alias.rst:14
#, fuzzy
msgid ""
"While the :rst:dir:`@alias` tag may sound similar to the :rst:dir:`@name`"
" tag, these tags behave very differently. The :rst:dir:`@name` tag tells "
"JSDoc to ignore any code associated with the comment. For example, when "
"JSDoc processes the following code, it ignores the fact that the comment "
"for ``bar`` is attached to a function:"
msgstr ""
"虽然@alias标记可能听起来与@name标签类似, 但这些标签的行为却截然不同.  @name标记告诉JSDoc忽略与注释关联的任何代码. "
"例如, 当JSDoc处理以下代码时, 它忽略了 ``bar`` 的注释附加到函数的事实: "

#: ../../source/tags/tags-alias.rst:28
#, fuzzy
msgid ""
"The :rst:dir:`@alias` tag tells JSDoc to pretend that Member A is "
"actually named Member B. For example, when JSDoc processes the following "
"code, it recognizes that ``foo`` is a function, then renames ``foo`` to "
"``bar`` in the documentation:"
msgstr ""
"@alias标记告诉JSDoc假装成员A实际上被命名为成员B.例如, 当JSDoc处理以下代码时, 它识别出 ``foo`` 是一个函数, 然后将"
" ``foo`` 重命名为 ``bar`` 在文档中: "

#: ../../source/tags/tags-alias.rst:43
#, fuzzy
msgid ""
"Suppose you are using a class framework that expects you to pass in a "
"constructor function when you define a class. You can use the "
":rst:dir:`@alias` tag to tell JSDoc how the class will be exposed in your"
" app."
msgstr "假设您正在使用一个类框架, 它希望您在定义类时传入构造函数. 您可以使用@alias标记告诉JSDoc如何在您的应用程序中公开该类. "

#: ../../source/tags/tags-alias.rst:47
#, fuzzy
msgid ""
"In the following example, the :rst:dir:`@alias` tag tells JSDoc to treat "
"the anonymous function as if it were the constructor for the class "
"“trackr.CookieManager”. Within the function, JSDoc interprets the "
"``this`` keyword relative to trackr.CookieManager, so the “value” method "
"has the namepath “trackr.CookieManager#value”."
msgstr ""
"在下面的示例中, @ alias标记告诉JSDoc将匿名函数视为类 “trackr.CookieManager” 的构造函数. 在函数中, "
"JSDoc解释相对于 trackr.CookieManager 的 ``this`` 关键字, 因此“value”方法具有名称路径 "
"“trackr.CookieManager #value”. "

#: ../../source/tags/tags-alias.rst:53
#, fuzzy
msgid "Using :rst:dir:`@alias` with an anonymous constructor function"
msgstr "使用带有匿名构造函数的@alias"

#: ../../source/tags/tags-alias.rst:70
#, fuzzy
msgid ""
"You can also use the :rst:dir:`@alias` tag with members that are created "
"within an immediately invoked function expression (IIFE). The "
":rst:dir:`@alias` tag tells JSDoc that these members are exposed outside "
"of the IIFE’s scope."
msgstr ""
"您还可以将@alias标记与在立即调用的函数表达式(IIFE)中创建的成员一起使用. "
"@alias标记告诉JSDoc这些成员暴露在IIFE范围之外. "

#: ../../source/tags/tags-alias.rst:74
#, fuzzy
msgid "Using :rst:dir:`@alias` for static members of a namespace"
msgstr "将@alias用于命名空间的静态成员"

#: ../../source/tags/tags-alias.rst:93
#, fuzzy
msgid ""
"For members that are defined within an object literal, you can use the "
":rst:dir:`@alias` tag as an alternative to the [@lends]\\ "
":rst:dir:`lends` tag."
msgstr ""
"对于在对象文字中定义的成员, 可以使用@alias标记替代 [@lends]\\`lends-tag <tags-lends.html>`_ "
"标记. "

#: ../../source/tags/tags-alias.rst:96
#, fuzzy
msgid "Using @alias for an object literal"
msgstr "使用@alias作为对象文字"

#: ../../source/tags/tags-async.rst:2
msgid "@async"
msgstr "@async"

#: ../../source/tags/tags-async.rst:6
msgid "``@async``"
msgstr "``@async``"

#: ../../source/tags/tags-async.rst:9
#, fuzzy
msgid ""
"The :rst:dir:`@async` tag indicates that a function is `asynchronous "
"<https://developer.mozilla.org/en-"
"US/docs/Web/JavaScript/Reference/Statements/async_function>`_, meaning "
"that it was declared using the syntax ``async function foo() {}``. Do not"
" use this tag for other types of asynchronous functions, such as "
"functions that provide a callback. This tag is available in JSDoc 3.5.0 "
"and later."
msgstr ""
"``@async``标签表示一个函数是`asynchronous <https://developer.mozilla.org/en-"
"US/docs/Web/JavaScript/Reference/Statements/async_function>`__, "
"这意味着它被声明了使用语法``async function foo(){}``. 不要将此标记用于其他类型的异步函数, 例如提供回调的函数. "
"此标记在JSDoc 3.5.0及更高版本中可用. "

#: ../../source/tags/tags-async.rst:16
msgid ""
"In general, you do not need to use this tag, because JSDoc automatically "
"detects asynchronous functions and identifies them in the generated "
"documentation. However, if you are writing a virtual comment for an "
"asynchronous function that does not appear in your code, you can use this"
" tag to tell JSDoc that the function is asynchronous."
msgstr ""
"通常, 您不需要使用此标记, 因为JSDoc会自动检测异步函数并在生成的文档中标识它们. 但是, 如果要为代码中未出现的异步函数编写虚拟注释, "
"则可以使用此标记告诉JSDoc该函数是异步的. "

#: ../../source/tags/tags-async.rst:24
#, fuzzy
msgid ""
"The following example shows a virtual comment that uses the "
":rst:dir:`@async` tag:"
msgstr "以下示例显示了使用``@async``标记的虚拟注释: "

#: ../../source/tags/tags-async.rst:26
#, fuzzy
msgid "Virtual comment with :rst:dir:`@async` tag"
msgstr "带有@async标记的虚拟评论"

#: ../../source/tags/tags-augments.rst:2
msgid "@augments"
msgstr "@augments"

#: ../../source/tags/tags-augments.rst:6
msgid "``@augments <namepath>``"
msgstr "``@augments <namepath>``"

#: ../../source/tags/tags-augments.rst:7
msgid ":rst:dir:`@extends`"
msgstr ""

#: ../../source/tags/tags-augments.rst:10
#, fuzzy
msgid ""
"The :rst:dir:`@augments` or\\ :rst:dir:`@extends` tag indicates that a "
"symbol inherits from, and potentially adds to, a parent symbol. You can "
"use this tag to document both class-based and prototype-based "
"inheritance."
msgstr ""
"``@augments`` 或 \\ ``@extends`` 标记表示符号从父符号继承并可能添加到父符号. "
"您可以使用此标记来记录基于类和基于原型的继承. "

#: ../../source/tags/tags-augments.rst:14
msgid ""
"In JSDoc 3.3.0 and later, if a symbol inherits from multiple parents, and"
" both parents have identically named members, JSDoc uses the "
"documentation from the last parent that is listed in the JSDoc comment."
msgstr ""
"在JSDoc 3.3.0及更高版本中, 如果符号继承自多个父项, 并且两个父项具有相同名称的成员, "
"则JSDoc使用JSDoc注释中列出的最后一个父项的文档. "

#: ../../source/tags/tags-augments.rst:22
msgid ""
"In the following example, the ``Duck`` class is defined as a subclass of "
"``Animal``. ``Duck`` instances have the same properties as ``Animal`` "
"instances, as well as a ``speak`` method that is unique to ``Duck`` "
"instances."
msgstr ""
"在下面的例子中, ``Duck`` 类被定义为 ``Animal`` 的子类. ``Duck`` 实例与 ``Animal`` "
"实例具有相同的属性, 以及 ``duck`` 实例独有的 ``speak`` 方法. "

#: ../../source/tags/tags-augments.rst:27
#, fuzzy
msgid "Documenting a class/subclass relationship"
msgstr "记录类/子类关系"

#: ../../source/tags/tags-augments.rst:57
msgid ""
"In the following example, the ``Duck`` class inherits from both the "
"``Flyable`` and ``Bird`` classes, both of which define a ``takeOff`` "
"method. Because the documentation for ``Duck`` lists ``@augments Bird`` "
"last, JSDoc automatically documents ``Duck#takeOff`` using the comment "
"from ``Bird#takeOff``."
msgstr ""
"在下面的例子中, ``Duck`` 类继承了 ``Flyable`` 和 ``Bird`` 类, 它们都定义了一个 ``takeOff`` 方法."
" 因为 ``Duck`` 的文档最后列出 ``@augments Bird``, 所以JSDoc使用 ``Bird＃takeOff`` "
"中的注释自动记录 ``Duck＃takeOff``. "

#: ../../source/tags/tags-augments.rst:63
#, fuzzy
msgid "Multiple inheritance with duplicated method names"
msgstr "具有重复方法名称的多重继承"

#: ../../source/tags/tags-augments.rst ../../source/tags/tags-property.rst
msgid "synonyms"
msgstr "同义词"

#: ../../source/tags/tags-augments.rst:111
#, fuzzy
msgid ":rst:dir:`@augments`"
msgstr ""

#: ../../source/tags/tags-author.rst:2
msgid "@author"
msgstr ""

#: ../../source/tags/tags-author.rst:8
msgid "``@author <name> [<emailAddress>]``"
msgstr ""

#: ../../source/tags/tags-author.rst:12
msgid ""
"The @author tag identifies the author of an item. In JSDoc 3.2 and later,"
" if the author’s name is followed by an email address enclosed in angle "
"brackets, the default template will convert the email address to a "
"``mailto:`` link."
msgstr ""
"@author标记标识项目的作者. 在JSDoc 3.2及更高版本中, 如果作者姓名后跟一个括在尖括号中的电子邮件地址, "
"则默认模板会将电子邮件地址转换为“mailto: ”链接. "

#: ../../source/tags/tags-author.rst:19
#, fuzzy
msgid "Documenting the author of an item"
msgstr "记录项目的作者"

#: ../../source/tags/tags-borrows.rst:2
msgid "@borrows"
msgstr "@borrows"

#: ../../source/tags/tags-borrows.rst:6
msgid "``@borrows <that namepath> as <this namepath>``"
msgstr "``@borrows <that namepath> as <this namepath>``"

#: ../../source/tags/tags-borrows.rst:9
msgid ""
"The @borrows tag allows you to add documentation for another symbol to "
"your documentation."
msgstr "@borrows标签允许您将另一个符号的文档添加到文档中. "

#: ../../source/tags/tags-borrows.rst:12
msgid ""
"This tag would be useful if you had more than one way to reference a "
"function, but you didn’t want to duplicate the same documentation in two "
"places."
msgstr "如果您有多种方法来引用函数, 那么此标记将非常有用, 但您不希望在两个位置复制相同的文档. "

#: ../../source/tags/tags-borrows.rst:18
msgid ""
"In this example there exists documentation for the “trstr” function, but "
"“util.trim” is just a reference to that same function by a different "
"name."
msgstr "在这个例子中, 存在“trstr”函数的文档, 但“util.trim”只是通过不同的名称引用同一个函数. "

#: ../../source/tags/tags-borrows.rst:21
#, fuzzy
msgid "Duplicate the documentation for trstr as util.trim"
msgstr "将 `trstr` 的文档复制为util.trim"

#: ../../source/tags/tags-callback.rst:2
msgid "@callback"
msgstr "@callback"

#: ../../source/tags/tags-callback.rst:6
msgid "``@callback <namepath>``"
msgstr "``@callback <namepath>``"

#: ../../source/tags/tags-callback.rst:9
msgid ""
"The @callback tag provides information about a callback function that can"
" be passed to other functions, including the callback’s parameters and "
"return value. You can include any of the tags that you can provide for a "
"@method."
msgstr "@callback 标记提供有关可以传递给其他函数的回调函数的信息, 包括回调的参数和返回值. 您可以包含可以为@method提供的任何标记. "

#: ../../source/tags/tags-callback.rst:14
msgid ""
"Once you define a callback, you can use it in the same way as a custom "
"type defined with the @typedef tag. In particular, you can use the "
"callback’s name as a type name. This allows you to indicate that a "
"function parameter should contain a certain type of callback."
msgstr ""
"定义回调后, 可以使用与使用@typedef标记定义的自定义类型相同的方式使用它. 特别是, 您可以将回调的名称用作类型名称. "
"这允许您指示函数参数应包含某种类型的回调. "

#: ../../source/tags/tags-callback.rst:19
msgid ""
"If you want a callback to be displayed with the type definitions for a "
"specific class, you can give the callback a namepath indicating that it "
"is an inner function of that class. You can also define a global callback"
" type that is referenced from multiple classes."
msgstr "如果希望使用特定类的类型定义显示回调, 则可以为回调提供一个名称路径, 指示它是该类的内部函数. 您还可以定义从多个类引用的全局回调类型. "

#: ../../source/tags/tags-callback.rst:26
#, fuzzy
msgid "Documenting a class-specific callback"
msgstr "记录特定于类的回调"

#: ../../source/tags/tags-callback.rst:49
#, fuzzy
msgid "Documenting a global callback"
msgstr "记录全局回调"

#: ../../source/tags/tags-class.rst:2
msgid "@class (synonyms: @constructor)"
msgstr ""

#: ../../source/tags/tags-class.rst:6
#, fuzzy
msgid ":rst:dir:`@constructor`"
msgstr ""

#: ../../source/tags/tags-class.rst:7
msgid "``@class [<type> <name>]``"
msgstr "``@class [<type> <name>]``"

#: ../../source/tags/tags-class.rst:9
msgid ""
"The @class tag marks a function as being a constructor, meant to be "
"called with the new keyword to return an instance."
msgstr "@class标记将函数标记为构造函数, 意味着使用new关键字调用以返回实例. "

#: ../../source/tags/tags-class.rst:14
#, fuzzy
msgid "A function that constructs Person instances."
msgstr "构造Person实例的函数. "

#: ../../source/tags/tags-class.rst:28
msgid ":rst:dir:`@class`"
msgstr ""

#: ../../source/tags/tags-classdesc.rst:2
msgid "@classdesc"
msgstr "@classdesc"

#: ../../source/tags/tags-classdesc.rst:6
msgid "``@classdesc <some description>``"
msgstr "``@classdesc <some description>``"

#: ../../source/tags/tags-classdesc.rst:9
#, fuzzy
msgid ""
"The @classdesc tag is used to provide a description for a class, separate"
" from the constructor function’s description. Use the @classdesc tag in "
"combination with the [@class (or @constructor) tag]\\ :rst:dir:`class`."
msgstr ""
"@classdesc标记用于提供类的描述, 与构造函数的描述分开. 将@classdesc标记与[@class(或@constructor)标记]"
" \\`class-tag <tags-class.html>`__结合使用. "

#: ../../source/tags/tags-classdesc.rst:14
msgid ""
"The functionality of the @classdesc tag in JSDoc 3 duplicates that of the"
" @class in previous versions. As of version 3, the syntax and "
"functionality of the @class tag now exactly matches the @constructor tag,"
" and the @classdesc tag more explicitly communicates its purpose: to "
"document a class’s description."
msgstr ""
"JSDoc 3中@classdesc标记的功能与先前版本中@class的功能重复. 从版本3开始, @ "
"class标签的语法和功能现在与@constructor标签完全匹配, @ classdesc标签更明确地传达其目的: 记录类的描述. "

#: ../../source/tags/tags-classdesc.rst:22
msgid ""
"As shown below, a class has places for two descriptions, one applies to "
"the function itself, while the other applies to the class in general."
msgstr "如下所示, 类具有两个描述的位置, 一个适用于函数本身, 而另一个适用于该类. "

#: ../../source/tags/tags-classdesc.rst:25
msgid ""
"A doclet with both a constructor function description and a class "
"description"
msgstr "具有构造函数描述和类描述的doclet"

#: ../../source/tags/tags-constant.rst:2
msgid "@constant (synonyms: @const)"
msgstr ""

#: ../../source/tags/tags-constant.rst:6
msgid ":rst:dir:`@const`"
msgstr ""

#: ../../source/tags/tags-constant.rst:7
msgid "``@constant [<type> <name>]``"
msgstr "``@constant [<type> <name>]``"

#: ../../source/tags/tags-constant.rst:10
msgid ""
"The @constant tag is used to mark the documentation as belonging to a "
"symbol that is a constant."
msgstr "@constant标记用于将文档标记为属于常量的符号. "

#: ../../source/tags/tags-constant.rst:15
msgid ""
"In this example we are documenting a string constant. Note that although "
"the code is using the ``const`` keyword, this is not required by JSDoc. "
"If your JavaScript host environment doesn’t yet support constant "
"declarations, the @const documentation can just as effectively be used on"
" ``var`` declarations."
msgstr ""
"在这个例子中, 我们记录了一个字符串常量. 请注意, 尽管代码使用的是``const``关键字, 但JSDoc并不需要这样做. "
"如果您的JavaScript主机环境还不支持常量声明, 那么@const文档可以有效地用于``var``声明. "

#: ../../source/tags/tags-constant.rst:21
#, fuzzy
msgid "A string constant representing the color red"
msgstr "A string constant representing the color red"

#: ../../source/tags/tags-constant.rst:33
msgid ""
"Note that the example provides the type in a @type tag. This is optional."
" Also the optional @default tag is used here too, this will automatically"
" add whatever the assigned value is (for example ‘FF0000’) to the "
"documentation."
msgstr ""
"请注意, 该示例提供了@type标记中的类型. 这是可选的. 此外, 此处也使用了可选的@default标记, "
"这将自动将指定值的任何内容(例如“FF0000”)添加到文档中. "

#: ../../source/tags/tags-constant.rst:40
#, fuzzy
msgid ":rst:dir:`@constant`"
msgstr ""

#: ../../source/tags/tags-constructs.rst:2
#, fuzzy
msgid "@constructs"
msgstr "@construct"

#: ../../source/tags/tags-constructs.rst:6
msgid "``@constructs [<name>]``"
msgstr "``@constructs [<name>]``"

#: ../../source/tags/tags-constructs.rst:9
#, fuzzy
msgid ""
"When using an object literal to define a class (for example with the "
":rst:dir:`@lends` tag) the :rst:dir:`@constructs` tag allows you to "
"document that a particular function will be used to construct instances "
"of that class."
msgstr ""
"当使用对象文字来定义一个类时(例如使用``lends``标签),  "
"``@constructcts``标签允许你记录一个特定的函数将用于构造该类的实例. "

#: ../../source/tags/tags-constructs.rst:15
#, fuzzy
msgid "Using the @constructs tag with @lends"
msgstr "将@constructs标记与@lends一起使用"

#: ../../source/tags/tags-constructs.rst:32
#, fuzzy
msgid "Without @lends you must provide the name of the class"
msgstr "如果没有@lends, 您必须提供该类的名称"

#: ../../source/tags/tags-copyright.rst:2
msgid "@copyright"
msgstr "@copyright"

#: ../../source/tags/tags-copyright.rst:6
msgid "``@copyright <some copyright text>``"
msgstr "``@copyright <some copyright text>``"

#: ../../source/tags/tags-copyright.rst:9
#, fuzzy
msgid ""
"The @copyright tag is used to document copyright information in a file "
"overview comment. Use this tag in combination with the [@file tag]\\ "
":rst:dir:`file`."
msgstr ""
"@copyright标签用于在文件概述评论中记录版权信息. 将此标记与[@file tag] \\`file-tag <tags-"
"file.html>`__结合使用. "

#: ../../source/tags/tags-default.rst:2
msgid "@default (synonyms: @defaultvalue)"
msgstr ""

#: ../../source/tags/tags-default.rst:6
#, fuzzy
msgid "@defaultvalue"
msgstr "@default"

#: ../../source/tags/tags-default.rst:7
msgid "``@default [<some value>]``"
msgstr "``@default [<some value>]``"

#: ../../source/tags/tags-default.rst:10
msgid ""
"The @default tag allows you to document the assigned value of a symbol. "
"You can supply this tag with a value yourself or you can allow JSDoc to "
"automatically document the value from the source code – only possible "
"when the documented symbol is being assigned a single, simple value that "
"is either: a string, a number, a boolean or null."
msgstr ""
"@default标记允许您记录符号的指定值. 您可以自己为此标记提供值, 或者您可以允许JSDoc自动记录源代码中的值 - "
"只有在为文档化的符号分配一个简单的值时才有可能: 字符串, 数字, 布尔值或者为null. "

#: ../../source/tags/tags-default.rst:18
msgid ""
"In this example a constant is documented. The value of the constant is "
"``0xff0000``. By adding the @default tag this value is automatically "
"added to the documentation."
msgstr "在此示例中, 记录了常量. 常量的值是``0xff0000``. 通过添加@default标记, 此值将自动添加到文档中. "

#: ../../source/tags/tags-default.rst:22
#, fuzzy
msgid "Document the number value of a constant"
msgstr "记录常量的数值"

#: ../../source/tags/tags-default.rst:33
msgid "@default"
msgstr "@default"

#: ../../source/tags/tags-deprecated.rst:2
msgid "@deprecated"
msgstr "@deprecated"

#: ../../source/tags/tags-description.rst:2
#, fuzzy
msgid "@description (synonyms: @desc)"
msgstr "``@description <some description>``"

#: ../../source/tags/tags-description.rst:6
msgid ":rst:dir:`@desc`"
msgstr ""

#: ../../source/tags/tags-description.rst:7
msgid "``@description <some description>``"
msgstr "``@description <some description>``"

#: ../../source/tags/tags-description.rst:10
#, fuzzy
msgid ""
"The @description tag allows you to provide a general description of the "
"symbol you are documenting. The description may include HTML markup. It "
"may also include Markdown formatting if the :ref:`plugins-markdown` is "
"enabled."
msgstr ""
"@description标签允许您提供正在记录的符号的一般描述. 描述可以包括HTML标记. 如果启用了“Markdown插件<plugins-"
"markdown.html>”__, 它还可能包含Markdown格式. "

#: ../../source/tags/tags-description.rst:16
msgid ""
"If you describe a symbol at the very beginning of a JSDoc comment, before"
" using any block tags, you may omit the @description tag."
msgstr "如果在JSDoc注释的最开头描述符号, 则在使用任何块标记之前, 可以省略@description标记. "

#: ../../source/tags/tags-description.rst:19
#, fuzzy
msgid "Describing a symbol without the @description tag"
msgstr "描述没有@description标记的符号"

#: ../../source/tags/tags-description.rst:32
msgid ""
"By using the @description tag, you can place the description anywhere in "
"the JSDoc comment."
msgstr "通过使用@description标记, 您可以将描述放在JSDoc注释中的任何位置. "

#: ../../source/tags/tags-description.rst:35
#, fuzzy
msgid "Describing a symbol with the @description tag"
msgstr "Describing a symbol with the @description tag"

#: ../../source/tags/tags-description.rst:48
msgid ""
"If there’s both a description at the beginning of a JSDoc comment and a "
"description provided with the @description tag, the description specified"
" with the @description will override the description at the beginning of "
"the comment."
msgstr "如果JSDoc注释开头的描述和@description标记提供的描述, 则使用@description指定的描述将覆盖注释开头的描述. "

#: ../../source/tags/tags-description.rst:55
#, fuzzy
msgid ":rst:dir:`@description`"
msgstr ""

#: ../../source/tags/tags-enum.rst:2
msgid "@enum"
msgstr "@enum"

#: ../../source/tags/tags-enum.rst:6
msgid "``@enum [<type>]``"
msgstr "``@enum [<type>]``"

#: ../../source/tags/tags-enum.rst:9
msgid ""
"The @enum tag documents a collection of static properties whose values "
"are all of the same type."
msgstr "@enum标记记录了一组静态属性, 这些属性的值都是相同的类型. "

#: ../../source/tags/tags-enum.rst:12
msgid ""
"An enum is similar a collection of properties, except that an enum is "
"documented in its own doc comment, whereas properties are documented "
"within the doc comment of their container. Often this tag is used with "
"@readonly, as an enum typically represents a collection of constants."
msgstr ""
"枚举类似于属性集合, 除了枚举在其自己的doc注释中记录, 而属性记录在其容器的doc注释中. 这个标签通常与@readonly一起使用, "
"因为枚举通常代表一组常量. "

#: ../../source/tags/tags-enum.rst:19
msgid ""
"This shows how to document an object that represents a value with three "
"possible states. Note that the enum members can have optional "
"descriptions added if you wish. Also you can override the type, as is "
"shown with “MAYBE” – by default enum members will be documented with the "
"same type as the enum itself."
msgstr ""
"这显示了如何记录表示具有三种可能状态的值的对象. 请注意, 如果您愿意, 枚举成员可以添加可选说明. 您也可以覆盖类型, 如“MAYBE”所示 -"
" 默认情况下, 枚举成员将记录与枚举本身相同的类型. "

#: ../../source/tags/tags-enum.rst:25
#, fuzzy
msgid "A numeric enum, representing three states"
msgstr "一个数字枚举, 代表三个状态"

#: ../../source/tags/tags-event.rst:2
msgid "@event"
msgstr "@event"

#: ../../source/tags/tags-event.rst:6
msgid "``@event <className>#[event:]<eventName>``"
msgstr "``@event <className>#[event:]<eventName>``"

#: ../../source/tags/tags-event.rst:9
msgid ""
"The @event tag allows you to document an event that can be fired. A "
"typical event is represented by an object with a defined set of "
"properties."
msgstr "@event标记允许您记录可以触发的事件. 典型事件由具有已定义属性集的对象表示. "

#: ../../source/tags/tags-event.rst:13
msgid ""
"Once you have used the @event tag to define a specific type of event, you"
" can use the @fires tag to indicate that a method can fire that event. "
"You can also use the @listens tag to indicate that a symbol listens for "
"the event."
msgstr "使用@event标记定义特定类型的事件后, 可以使用@fires标记指示方法可以触发该事件. 您还可以使用@listens标记来指示符号侦听事件. "

#: ../../source/tags/tags-event.rst:18
msgid ""
"JSDoc automatically prepends the namespace ``event:`` to each event’s "
"name. In general, you must include this namespace when you link to the "
"event in another doclet. (The @fires tag is a notable exception; it "
"allows you to omit the namespace.)"
msgstr ""
"JSDoc自动为每个事件的名称添加命名空间``event: ``. 通常, 在链接到另一个doclet中的事件时, 必须包含此命名空间.  "
"(@fires标记是一个值得注意的例外;它允许您省略命名空间. )"

#: ../../source/tags/tags-event.rst:24
#, fuzzy
msgid ""
"JSDoc 3 uses @event doclets to document the content of an event. In "
"contrast, JSDoc Toolkit 2 used @event doclets to identify a function that"
" can be fired when an event of the same name occurs."
msgstr ""
"**注意**: JSDoc 3使用@event doclets来记录事件的内容. 相比之下, JSDoc Toolkit 2使用@event "
"doclet来标识在发生同名事件时可以触发的函数. "

#: ../../source/tags/tags-event.rst:30
msgid ""
"The following examples show how to document an event in the ``Hurl`` "
"class called ``snowball``. The event contains an object with a single "
"property."
msgstr "以下示例显示如何在名为``snowball``的``Hurl``类中记录事件. 该事件包含具有单个属性的对象. "

#: ../../source/tags/tags-event.rst:34
#, fuzzy
msgid "Documenting a function call as an event"
msgstr "将函数调用记录为事件"

#: ../../source/tags/tags-event.rst:55
#, fuzzy
msgid "Using a named doclet to document an event"
msgstr "使用命名的doclet来记录事件"

#: ../../source/tags/tags-example.rst:2
msgid "@example"
msgstr "@example"

#: ../../source/tags/tags-example.rst:6
#, fuzzy
msgid "``@example``"
msgstr "@example"

#: ../../source/tags/tags-example.rst:9
msgid ""
"Provide an example of how to use a documented item. The text that follows"
" this tag will be displayed as highlighted code."
msgstr "提供如何使用记录的项目的示例. 此标记后面的文本将显示为突出显示的代码. "

#: ../../source/tags/tags-example.rst:14
msgid "Note that a doclet may have multiple examples."
msgstr "请注意, doclet可能有多个示例. "

#: ../../source/tags/tags-example.rst:16
#, fuzzy
msgid "Documenting examples"
msgstr "记录示例"

#: ../../source/tags/tags-example.rst:33
msgid ""
"Examples can also be captioned using ``<caption></caption>`` after the "
"@example tag."
msgstr "在@example标记之后, 也可以使用``<caption> </ caption>``来标注示例. "

#: ../../source/tags/tags-example.rst:35
#, fuzzy
msgid "Documenting examples with a caption"
msgstr "使用标题记录示例"

#: ../../source/tags/tags-exports.rst:2
msgid "@exports"
msgstr "@exports"

#: ../../source/tags/tags-exports.rst:6
msgid "``@exports <moduleName>``"
msgstr "``@exports <moduleName>``"

#: ../../source/tags/tags-exports.rst:9 ../../source/tags/tags-module.rst:9
msgid ""
"In JSDoc 3.3.0 and later, ``<moduleName>`` may include the ``module:`` "
"prefix. In previous versions, you must omit this prefix."
msgstr ""
"在JSDoc 3.3.0及更高版本中, ``<moduleName>``可能包含``module: ``前缀. 在以前的版本中, "
"您必须省略此前缀. "

#: ../../source/tags/tags-exports.rst:12
msgid ""
"Use the @exports tag when documenting JavaScript modules that export "
"anything other than the “exports” object or the “module.exports” "
"property."
msgstr "在记录导出除“exports”对象或“module.exports”属性之外的任何内容的JavaScript模块时, 请使用@exports标记. "

#: ../../source/tags/tags-exports.rst:18
msgid ""
"In modules where you are using the special “exports” object, the @exports"
" tag is never needed. JSDoc automatically recognizes that this object’s "
"members are being exported. Similarly, JSDoc automatically recognizes the"
" special “module.exports” property in Node.js modules."
msgstr ""
"在使用特殊“导出”对象的模块中, 永远不需要@exports标记.  JSDoc自动识别正在导出此对象的成员. 类似地, "
"JSDoc自动识别Node.js模块中的特殊“module.exports”属性. "

#: ../../source/tags/tags-exports.rst:23
#, fuzzy
msgid "CommonJS module"
msgstr "CommonJS模块"

#: ../../source/tags/tags-exports.rst:36
#, fuzzy
msgid "Node.js module"
msgstr "Node.js模块"

#: ../../source/tags/tags-exports.rst:49
#, fuzzy
msgid "AMD module that exports an object literal"
msgstr "导出对象文字的AMD模块"

#: ../../source/tags/tags-exports.rst:68
#, fuzzy
msgid "AMD module that exports a constructor"
msgstr "导出构造函数的AMD模块"

#: ../../source/tags/tags-exports.rst:93
msgid ""
"If your module exports an object named anything other than “exports” or "
"“module.exports”, use the @exports tag to indicate what is being "
"exported."
msgstr "如果模块导出名为“exports”或“module.exports”以外的任何对象, 请使用@exports标记指示正在导出的内容. "

#: ../../source/tags/tags-exports.rst:97
#, fuzzy
msgid "AMD module that exports an object"
msgstr "导出对象的AMD模块"

#: ../../source/tags/tags-external.rst:2
msgid "@external (synonyms: @host)"
msgstr ""

#: ../../source/tags/tags-external.rst:6
msgid ":rst:dir:`@host`"
msgstr ""

#: ../../source/tags/tags-external.rst:7
msgid "``@external <NameOfExternal>``"
msgstr "``@external <NameOfExternal>``"

#: ../../source/tags/tags-external.rst:10
#, fuzzy
msgid ""
"The :rst:dir:`@external` tag identifies a class, namespace, or module "
"that is defined outside of the current package. By using this tag, you "
"can document your package’s extensions to the external symbol, or you can"
" provide information about the external symbol to your package’s users. "
"You can also refer to the external symbol’s namepath in any other JSDoc "
"tag."
msgstr ""
" ``@external``标记标识在当前包之外定义的类, 命名空间或模块. 通过使用此标记, 您可以记录包的外部符号扩展, "
"或者您可以向包的用户提供有关外部符号的信息. 您还可以在任何其他JSDoc标记中引用外部符号的名称路径. "

#: ../../source/tags/tags-external.rst:17
#, fuzzy
msgid ""
"The namepath for an external symbol always uses the prefix ``external:`` "
"(for example, ``{@link external:Foo}`` or ``@augments external:Foo``). "
"However, you can omit this prefix from the :rst:dir:`@external` tag."
msgstr ""
"外部符号的名称路径总是使用前缀``external: ``(例如, ``{@link external: Foo}``或``@augments "
"external: Foo``). 但是, 您可以从 ``@external``标记中省略此前缀. "

#: ../../source/tags/tags-external.rst:22
#, fuzzy
msgid ""
"You should only add the :rst:dir:`@external` tag to the highest-level "
"symbol that is defined outside of your project. See “`Documenting a "
"nested external symbol <#nested-external-symbol>`__” for an example."
msgstr ""
"**注意**: 您只应将 ``@external``标记添加到项目外部定义的最高级别符号. 有关示例, 请参阅“`记录嵌套的外部符号"
"<#nested-external-symbol>`__”. "

#: ../../source/tags/tags-external.rst:28
msgid ""
"The following example shows how to document the built-in ``String`` "
"object as an external, along with the new instance method "
"``external:String#rot13``:"
msgstr "下面的示例演示如何将内置的``String``对象作为外部文档, 以及新的实例方法``external: String＃rot13``: "

#: ../../source/tags/tags-external.rst:31
#, fuzzy
msgid "Documenting methods added to built-in classes"
msgstr "记录方法添加到内置类中"

#: ../../source/tags/tags-external.rst:48
msgid ""
"The following example documents a new ``starfairy`` function added to the"
" external namespace ``\"jQuery.fn\"``:"
msgstr "下面的例子记录了一个新的``starfairy``函数添加到外部命名空间``\\“jQuery.fn \\”``:"

#: ../../source/tags/tags-external.rst:50
#, fuzzy
msgid "Documenting external namespaces"
msgstr "记录外部名称空间"

#: ../../source/tags/tags-external.rst:64
msgid ""
"In the following example, the class ``EncryptedRequest`` is documented as"
" a subclass of the built-in class ``XMLHttpRequest``:"
msgstr "在下面的例子中, 类``EncryptedRequest``被记录为内置类``XMLHttpRequest`的子类. :"

#: ../../source/tags/tags-external.rst:67
#, fuzzy
msgid "Extending an external."
msgstr "扩展外部. "

#: ../../source/tags/tags-external.rst:82
#, fuzzy
msgid ""
"You should only add the :rst:dir:`@external` tag to the highest-level "
"symbol that is defined outside of your project. In the following example,"
" the documentation refers to the external class ``security.TLS``. As a "
"result, the :rst:dir:`@external` tag is used to document the external "
"namespace ``external:security``, but *not* the external class "
"``external:security.TLS``."
msgstr ""
"您只应将 ``@external``标记添加到项目外部定义的最高级别符号. 在以下示例中, 文档引用了外部类``security.TLS``. "
"因此,  ``@external``标签用于记录外部命名空间``external: security``, 但*不是*外部类``external:"
" security.TLS``. "

#: ../../source/tags/tags-external.rst:88
#, fuzzy
msgid "Documenting a nested external symbol"
msgstr "记录嵌套的外部符号"

#: ../../source/tags/tags-external.rst:105
#, fuzzy
msgid ":rst:dir:`@external`"
msgstr ""

#: ../../source/tags/tags-file.rst:2
msgid "@file (synonyms: @fileoverview, @overview)"
msgstr ""

#: ../../source/tags/tags-file.rst:6
msgid ""
"The @file tag provides a description for a file. Use the tag in a JSDoc "
"comment at the beginning of the file."
msgstr "@file标记提供文件的描述. 在文件开头的JSDoc注释中使用标记. "

#: ../../source/tags/tags-file.rst:7
msgid ":rst:dir:`@fileoverview`, :rst:dir:`@overview`"
msgstr ""

#: ../../source/tags/tags-file.rst:10
#, fuzzy
msgid "File description"
msgstr "@description"

#: ../../source/tags/tags-file.rst:20 ../../source/tags/tags-file.rst:24
msgid ":rst:dir:`@file`"
msgstr ""

#: ../../source/tags/tags-fires.rst:2
msgid "@fires (synonyms: @emits)"
msgstr ""

#: ../../source/tags/tags-fires.rst:6
msgid ":rst:dir:`@emits`"
msgstr ""

#: ../../source/tags/tags-fires.rst:7
msgid "``@fires <className>#[event:]<eventName>``"
msgstr "``@fires <className>#[event:]<eventName>``"

#: ../../source/tags/tags-fires.rst:10
msgid ""
"The @fires tag indicates that a method can fire a specified type of event"
" when it is called. Use the [@event tag]\\ `event-tag <tags-"
"event.html>`__ to document the event’s content."
msgstr ""
"@fires标记表示方法在调用时可以触发指定类型的事件. 使用[@event标记] \\`event-tag <tags-"
"event.html>`__来记录事件的内容. "

#: ../../source/tags/tags-fires.rst:16
#, fuzzy
msgid "Method that fires a ‘drain’ event"
msgstr "Method that fires a ‘drain’ event"

#: ../../source/tags/tags-fires.rst:30
msgid ":rst:dir:`@fires`"
msgstr ""

#: ../../source/tags/tags-function.rst:2
msgid "@function (synonyms: @func, @method)"
msgstr ""

#: ../../source/tags/tags-function.rst:6
msgid ":rst:dir:`@func`, :rst:dir:`@method`"
msgstr ""

#: ../../source/tags/tags-function.rst:7
msgid "``@function [<FunctionName>]``"
msgstr "``@function [<FunctionName>]``"

#: ../../source/tags/tags-function.rst:8
#, fuzzy
msgid ""
"This marks an object as being a function, even though it may not appear "
"to be one to the parser. It sets the doclet’s :rst:dir:`@kind` to "
"‘function’."
msgstr ""
"这将对象标记为函数, 即使它似乎不是解析器的对象. 它将doclet的[@kind] \\`kind-tag <tags-"
"kind.html>`__设置为'function'. "

#: ../../source/tags/tags-function.rst:13
#, fuzzy
msgid "Using @function to mark a function."
msgstr "使用@function标记一个函数. "

#: ../../source/tags/tags-function.rst:19
#, fuzzy
msgid ""
"Without the @function tag, the ``paginate`` object would be documented as"
" a generic object (a :rst:dir:`@member`), because it isn’t possible to "
"tell from examining the line of code what type of value ``paginate`` will"
" hold when it is run."
msgstr ""
"没有@function标签, ``paginate``对象将被记录为通用对象([@member] \\`member-tag <tags- "
"member.html>`__), 因为它不可能通过检查代码行告诉它什么类型的值``paginate``在运行时将保持. "

#: ../../source/tags/tags-function.rst:24
#, fuzzy
msgid "Using @function with a name."
msgstr "使用带有名称的@function. "

#: ../../source/tags/tags-function.rst:35
#: ../../source/tags/tags-function.rst:39
#, fuzzy
msgid ":rst:dir:`@function`"
msgstr ""

#: ../../source/tags/tags-generator.rst:2
msgid "@generator"
msgstr "@generator"

#: ../../source/tags/tags-generator.rst:6
msgid "``@generator``"
msgstr "``@generator``"

#: ../../source/tags/tags-generator.rst:9
msgid ""
"The ``@generator`` tag indicates that a function is a `generator function"
" <https://developer.mozilla.org/en-"
"US/docs/Web/JavaScript/Reference/Statements/function*>`__, meaning that "
"it was declared using the syntax ``function* foo() {}``. This tag is "
"available in JSDoc 3.5.0 and later."
msgstr ""
"``@genere``标签表示函数是一个`生成函数<https://developer.mozilla.org/en-"
"US/docs/Web/JavaScript/Reference/Statements/function*>`__, "
"意思是它是使用语法``function * foo(){}``声明的. 此标记在JSDoc 3.5.0及更高版本中可用. "

#: ../../source/tags/tags-generator.rst:14
msgid ""
"In general, you do not need to use this tag, because JSDoc automatically "
"detects generator functions and identifies them in the generated "
"documentation. However, if you are writing a virtual comment for a "
"generator function that does not appear in your code, you can use this "
"tag to tell JSDoc that the function is a generator function."
msgstr ""
"通常, 您不需要使用此标记, 因为JSDoc会自动检测生成器函数并在生成的文档中标识它们. 但是, "
"如果您正在为代码中未出现的生成器函数编写虚拟注释, 则可以使用此标记告诉JSDoc该函数是生成器函数. "

#: ../../source/tags/tags-generator.rst:22
msgid ""
"The following example shows a virtual comment that uses the "
"``@generator`` tag:"
msgstr "以下示例显示了使用``@genere``标记的虚拟注释: "

#: ../../source/tags/tags-generator.rst:24
#, fuzzy
msgid "Virtual comment with @generator tag"
msgstr "使用@generator标记进行虚拟评论"

#: ../../source/tags/tags-global.rst:2
msgid "@global"
msgstr "@global"

#: ../../source/tags/tags-global.rst:6
#, fuzzy
msgid "``@global``"
msgstr "@global"

#: ../../source/tags/tags-global.rst:9
msgid ""
"The @global tag specifies that a symbol should appear in the "
"documentation as a *global* symbol. JSDoc ignores the symbol’s actual "
"scope within the source file. This tag is especially useful for symbols "
"that are defined locally, then assigned to a global symbol."
msgstr ""
"@global标记指定符号应作为* global *符号出现在文档中.  JSDoc忽略源文件中符号的实际范围. "
"此标记对于本地定义的符号特别有用, 然后分配给全局符号. "

#: ../../source/tags/tags-global.rst:16
msgid ""
"Use the @global tag to specify that a symbol should be documented as "
"global."
msgstr "使用@global标记指定应将符号记录为全局. "

#: ../../source/tags/tags-global.rst:18
#, fuzzy
msgid "Document an inner variable as a global"
msgstr "将内部变量记录为全局变量"

#: ../../source/tags/tags-hideconstructor.rst:2
msgid "@hideconstructor"
msgstr "@hideconstructor"

#: ../../source/tags/tags-hideconstructor.rst:6
msgid "``@hideconstructor``"
msgstr "``@hideconstructor``"

#: ../../source/tags/tags-hideconstructor.rst:9
msgid ""
"The ``@hideconstructor`` tag tells JSDoc that the generated documentation"
" should not display the constructor for a class. This tag is available in"
" JSDoc 3.5.0 and later."
msgstr " ``@hideconstructor``标签告诉JSDoc生成的文档不应该显示类的构造函数. 此标记在JSDoc 3.5.0及更高版本中可用. "

#: ../../source/tags/tags-hideconstructor.rst:13
#, fuzzy
msgid ""
"For pre-ES2015 classes, use this tag in combination with the "
":rst:dir:`@class` or :rst:dir:`@constructor`."
msgstr ""
"对于ES2015之前的类, 请将此标记与`@class或 ``@constructor```tag <tags-"
"class.html>`__结合使用. "

#: ../../source/tags/tags-hideconstructor.rst:16
msgid ""
"For ES2015 classes, use this tag in the JSDoc comment for your "
"constructor. If your class does not have an explicit constructor, use "
"this tag in the JSDoc comment for the class."
msgstr "对于ES2015类, 请在构造函数的JSDoc注释中使用此标记. 如果您的类没有显式构造函数, 请在该类的JSDoc注释中使用此标记. "

#: ../../source/tags/tags-hideconstructor.rst:22
#, fuzzy
msgid "@hideconstructor tag with pre-ES2015 class"
msgstr "@hideconstructor 标签与ES2015之前的课程"

#: ../../source/tags/tags-hideconstructor.rst:64
#, fuzzy
msgid "@hideconstructor tag with ES2015 class"
msgstr "@hideconstructor 标签与ES2015类"

#: ../../source/tags/tags-ignore.rst:2
msgid "@ignore"
msgstr "@ignore"

#: ../../source/tags/tags-ignore.rst:6
#, fuzzy
msgid "``@ignore``"
msgstr "@ignore"

#: ../../source/tags/tags-ignore.rst:9
#, fuzzy
msgid ""
"The :rst:dir:`@ignore` tag indicates that a symbol in your code should "
"never appear in the documentation. This tag takes precedence over all "
"others."
msgstr " ``@ignore``标记表示代码中的符号永远不会出现在文档中. 此标记优先于所有其他标记. "

#: ../../source/tags/tags-ignore.rst:12
#, fuzzy
msgid ""
"For most JSDoc templates, including the default template, the "
":rst:dir:`@ignore` tag has the following effects:"
msgstr "对于大多数JSDoc模板, 包括默认模板,  ``@ignore``标签具有以下效果: "

#: ../../source/tags/tags-ignore.rst:15
#, fuzzy
msgid ""
"If you use the :rst:dir:`@ignore` tag with the :rst:dir:`@class` or "
":rst:dir:`@module` tag, the entire class or module will be omitted from "
"the documentation."
msgstr "如果使用带有 ``@class``或 ``@module``标签的 ``@ignore``标签, 则文档中将省略整个类或模块. "

#: ../../source/tags/tags-ignore.rst:18
#, fuzzy
msgid ""
"If you use the :rst:dir:`@ignore` tag with the :rst:dir:`@namespace` tag,"
" you must also add the :rst:dir:`@ignore` tag to any child classes and "
"namespaces. Otherwise, your documentation will show the child classes and"
" namespaces, but with incomplete names."
msgstr ""
"如果将 ``@ignore``标记与 ``@namespace``标记一起使用, 则还必须将 ``@ignore``标记添加到任何子类和名称空间."
" 否则, 您的文档将显示子类和命名空间, 但名称不完整. "

#: ../../source/tags/tags-ignore.rst:25
msgid ""
"In the following example, ``Jacket`` and ``Jacket#color`` will not appear"
" in the documentation."
msgstr "在下面的例子中, ``Jacket``和``Jacket #color``将不会出现在文档中. "

#: ../../source/tags/tags-ignore.rst:28
#, fuzzy
msgid "Class with :rst:dir:`@ignore` tag"
msgstr "带有 :rst:dir:``@ignore``标签的类"

#: ../../source/tags/tags-ignore.rst:40
msgid ""
"In the following example, the ``Clothes`` namespace contains a ``Jacket``"
" class. The :rst:dir:`@ignore` tag must be added to both ``Clothes`` and "
"``Clothes.Jacket``. ``Clothes``, ``Clothes.Jacket``, and "
"``Clothes.Jacket#color`` will not appear in the documentation."
msgstr ""

#: ../../source/tags/tags-ignore.rst:45
#, fuzzy
msgid "Namespace with child class"
msgstr "具有子类的命名空间"

#: ../../source/tags/tags-implements.rst:2
msgid "@implements"
msgstr "@implements"

#: ../../source/tags/tags-implements.rst:6
msgid "``@implements {typeExpression}``"
msgstr "``@implements {typeExpression}``"

#: ../../source/tags/tags-implements.rst:9
#, fuzzy
msgid ""
"The :rst:dir:`@implements` tag indicates that a symbol implements an "
"interface."
msgstr "``implements``标签表示符号实现了一个接口. "

#: ../../source/tags/tags-implements.rst:11
#, fuzzy
msgid ""
"Add the :rst:dir:`@implements` tag to the top-level symbol that "
"implements the interface (for example, a constructor function). You do "
"not need to add the :rst:dir:`@implements` tag to each member of the "
"implementation (for example, the implementation’s instance methods)."
msgstr ""
"将` :rst:dir:`@implements` 标签添加到实现接口的顶级符号(例如, 构造函数). 您不需要将 "
":rst:dir:`@implements` 标记添加到实现的每个成员(例如, 实现的实例方法). "

#: ../../source/tags/tags-implements.rst:16
msgid ""
"If you do not document one of the symbols in the implementation, JSDoc "
"will automatically use the interface’s documentation for that symbol."
msgstr "如果您没有记录实现中的一个符号, JSDoc将自动使用该符号的接口文档. "

#: ../../source/tags/tags-implements.rst:21
msgid ""
"In the following example, the ``TransparentColor`` class implements the "
"``Color`` interface and adds a ``TransparentColor#rgba`` method."
msgstr ""
"在下面的例子中, "
"``TransparentColor``类实现``Color``接口并添加``TransparentColor＃rgba``方法. "

#: ../../source/tags/tags-implements.rst:24
#, fuzzy
msgid "Using the @implements tag"
msgstr "使用@implements标签"

#: ../../source/tags/tags-inheritdoc.rst:2
msgid "@inherits"
msgstr "@inherits"

#: ../../source/tags/tags-inheritdoc.rst:6
#, fuzzy
msgid "``@inheritdoc``"
msgstr "``@generator``"

#: ../../source/tags/tags-inheritdoc.rst:9
#, fuzzy
msgid ""
"The :rst:dir:`@inheritdoc` tag indicates that a symbol should inherit its"
" documentation from its parent class. Any other tags that you include in "
"the JSDoc comment will be ignored."
msgstr " ``@inheritdoc``标记表示符号应该从其父类继承其文档. 您将在JSDoc注释中包含的任何其他标记将被忽略. "

#: ../../source/tags/tags-inheritdoc.rst:13
#, fuzzy
msgid ""
"This tag is provided for compatibility with `Closure Compiler "
"<https://developers.google.com/closure/compiler/>`_. By default, if you "
"do not add a JSDoc comment to a symbol, the symbol will inherit "
"documentation from its parent."
msgstr ""
"提供此标记是为了与“Closure Compiler "
"<https://developers.google.com/closure/compiler/>`__兼容. 默认情况下, "
"如果不向符号添加JSDoc注释, 该符号将从其父级继承文档. "

#: ../../source/tags/tags-inheritdoc.rst:17
#, fuzzy
msgid ""
"The presence of the :rst:dir:`@inheritdoc` tag implies the presence of "
"the :rst:dir:`@override`."
msgstr ":rst:dir:`@inheritdoc` 标签的存在意味着存在 `@override 标签 <tags-override.html>`_. "

#: ../../source/tags/tags-inheritdoc.rst:22
msgid ""
"The following example shows how a class can indicate that it inherits "
"documentation from its parent class:"
msgstr "以下示例显示了类如何指示它从其父类继承文档: "

#: ../../source/tags/tags-inheritdoc.rst:25
#, fuzzy
msgid "Class that inherits from a parent class"
msgstr "从父类继承的类"

#: ../../source/tags/tags-inheritdoc.rst:54
msgid ""
"You can get the same result by omitting the JSDoc comment from "
"``Socket#open``:"
msgstr "您可以通过省略``Socket＃open``中的JSDoc注释来获得相同的结果: "

#: ../../source/tags/tags-inheritdoc.rst:57
#, fuzzy
msgid "Inheriting documentation without the :rst:dir:`@inheritdoc` tag"
msgstr "没有 ``@inheritdoc`` 标签的继承文档"

#: ../../source/tags/tags-inline-link.rst:2
msgid "@link (synonyms: {@linkcode}, {@linkplain})"
msgstr ""

#: ../../source/tags/tags-inline-link.rst:6
msgid ":rst:dir:`@linkcode`, :rst:dir:`@linkplain`"
msgstr ""

#: ../../source/tags/tags-inline-link.rst:18
#, fuzzy
msgid ""
"The :rst:dir:`@link` inline tag creates a link to the namepath or URL "
"that you specify. When you use the :rst:dir:`@link` tag, you can also "
"provide link text, using one of several different formats. If you don’t "
"provide any link text, JSDoc uses the namepath or URL as the link text."
msgstr ""
"``{@link}`` inline标记创建指向您指定的名称路径或URL的链接. 当您使用 ``{@link}`` 标签时, "
"您还可以使用多种不同格式之一提供链接文本. 如果您不提供任何链接文本, JSDoc将使用名称路径或URL作为链接文本. "

#: ../../source/tags/tags-inline-link.rst:23
#, fuzzy
msgid ""
"If you need to link to a tutorial, use the :rst:dir:`@tutorial`  instead "
"of the ``@link`` tag."
msgstr ""
"如果需要链接到教程, 请使用```{@tutorial}``inline tag <tags-inline-"
"tutorial.html>`__而不是``{@link}``标签. "

#: ../../source/tags/tags-inline-link.rst
msgid "Link formatting"
msgstr "链接格式"

#: ../../source/tags/tags-inline-link.rst:27
#, fuzzy
msgid ""
"By default, :rst:dir:`@link` generates standard HTML anchor tags. "
"However, you may prefer to render certain links in a monospace font, or "
"to specify the format of individual links. You can use the following "
"synonyms for the :rst:dir:`@link` tag to control the formatting of links:"
msgstr ""
"默认情况下, ``{@link}``生成标准的HTML锚标签. 但是, 您可能希望以等宽字体呈现某些链接, 或指定单个链接的格式. "
"您可以使用以下同义词来表示``{@link}``标签来控制链接的格式: "

#: ../../source/tags/tags-inline-link.rst:32
#, fuzzy
msgid ":rst:dir:`@linkcode`: Forces the link’s text to use a monospace font."
msgstr "``{@linkcode}``: 强制链接的文本使用等宽字体. "

#: ../../source/tags/tags-inline-link.rst:33
#, fuzzy
msgid ""
":rst:dir:`@linkplain`: Forces the link’s text to appear as normal text, "
"without a monospace font."
msgstr "``{@linkplain}``: 强制链接的文本显示为普通文本, 不带等宽字体. "

#: ../../source/tags/tags-inline-link.rst:36
msgid ""
"You can also set one of the following options in JSDoc’s configuration "
"file; see `Configuring JSDoc <about-configuring-jsdoc.html>`__ for more "
"details:"
msgstr ""
"您还可以在JSDoc的配置文件中设置以下选项之一;有关更多详细信息, 请参阅`配置JSDoc <about-configurations-"
"jsdoc.html>`__:"

#: ../../source/tags/tags-inline-link.rst:40
msgid ""
"``templates.cleverLinks``: When set to ``true``, links to URLs use normal"
" text, and links to code use a monospace font."
msgstr "``templates.cleverLinks``: 当设置为``true``时, URL的链接使用普通文本, 而代码链接使用等宽字体. "

#: ../../source/tags/tags-inline-link.rst:42
#, fuzzy
msgid ""
"``templates.monospaceLinks``: When set to ``true``, all links use a "
"monospace font, except for links created with the :rst:dir:`@linkplain` "
"tag."
msgstr ""
"``templates.monospaceLinks``: 当设置为``true``时, "
"除了使用``{@linkplain}``标签创建的链接外, 所有链接都使用等宽字体. "

#: ../../source/tags/tags-inline-link.rst:47
#, fuzzy
msgid ""
"Although the default JSDoc template renders all of these tags correctly, "
"other templates may not recognize the :rst:dir:`@linkcode` and "
":rst:dir:`@linkplain` tags. In addition, other templates may ignore the "
"configuration options for link rendering."
msgstr ""
"**注意**: 虽然默认的JSDoc模板正确呈现所有这些标签, "
"但其他模板可能无法识别``{@linkcode}``和``{@linkin}``标签. 此外, 其他模板可能会忽略链接呈现的配置选项. "

#: ../../source/tags/tags-inline-link.rst:54
#, fuzzy
msgid ""
"The following example shows all of the ways to provide link text for the "
":rst:dir:`@link` tag:"
msgstr "以下示例显示了为``{@link}``标记提供链接文本的所有方法: "

#: ../../source/tags/tags-inline-link.rst:57
#: ../../source/tags/tags-inline-tutorial.rst:30
#, fuzzy
msgid "Providing link text"
msgstr "提供链接文字"

#: ../../source/tags/tags-inline-link.rst:67
msgid "By default, the example above produces output similar to the following:"
msgstr "默认情况下, 上面的示例生成类似于以下内容的输出: "

#: ../../source/tags/tags-inline-link.rst ../../source/tags/tags-property.rst
#, fuzzy
msgid "caption"
msgstr "字幕"

#: ../../source/tags/tags-inline-link.rst:69
#, fuzzy
msgid "Output for {@link} tags"
msgstr "{@link}标签的输出"

#: ../../source/tags/tags-inline-link.rst:77
msgid ""
"If the configuration property ``templates.cleverLinks`` were set to "
"``true``, the example above would produce the following output:"
msgstr "如果配置属性``templates.cleverLinks``设置为``true``, 上面的例子将产生以下输出: "

#: ../../source/tags/tags-inline-link.rst:80
#, fuzzy
msgid "Output with clever links enabled"
msgstr "输出启用了聪明的链接"

#: ../../source/tags/tags-inline-link.rst:91
#: ../../source/tags/tags-inline-link.rst:95
msgid ":rst:dir:`@link`"
msgstr ""

#: ../../source/tags/tags-inline-tutorial.rst:2
msgid "@inline-tutorial"
msgstr "@inline-tutorial"

#: ../../source/tags/tags-inline-tutorial.rst:17
#, fuzzy
msgid ""
"The :rst:dir:`@tutorial` inline tag creates a link to the tutorial "
"identifier that you specify. When you use the :rst:dir:`@tutorial` tag, "
"you can also provide link text, using one of several different formats. "
"If you don’t provide any link text, JSDoc uses the tutorial’s title as "
"the link text."
msgstr ""
"``{@tutorial}``inline标记创建指向您指定的教程标识符的链接. 当您使用``{@tutorial}``标签时, "
"您还可以使用多种不同格式之一提供链接文本. 如果您不提供任何链接文本, JSDoc将使用教程的标题作为链接文本. "

#: ../../source/tags/tags-inline-tutorial.rst:22
#, fuzzy
msgid ""
"If you need to link to a namepath or a URL, use the :rst:dir:`@link` "
":rst:dir:`@inline` instead of the :rst:dir:`@tutorial` tag."
msgstr ""
"如果需要链接到名称路径或URL, 请使用```{@link}``inline tag <tags-inline-"
"link.html>`__而不是``{@tutorial}``标签. "

#: ../../source/tags/tags-inline-tutorial.rst:27
#, fuzzy
msgid ""
"The following example shows all of the ways to provide link text for the "
":rst:dir:`@tutorial` tag:"
msgstr "以下示例显示了为``{@tutorial}``标记提供链接文本的所有方法: "

#: ../../source/tags/tags-inline-tutorial.rst:40
msgid ""
"If all of these tutorials are defined, and the title of the "
"``gettingstarted`` tutorial is “Getting Started,” the example above "
"produces output similar to the following:"
msgstr ""
"如果定义了所有这些教程, 并且``gettingstarted``教程的标题是“Getting Started”, "
"则上面的示例将生成类似于以下内容的输出: "

#: ../../source/tags/tags-inline-tutorial.rst:46
#, fuzzy
msgid "Output for :rst:dir:`@link` tags"
msgstr "{@link}标签的输出"

#: ../../source/tags/tags-inner.rst:2
msgid "@inner"
msgstr "@inner"

#: ../../source/tags/tags-inner.rst:6
#, fuzzy
msgid "``@inner``"
msgstr "@inner"

#: ../../source/tags/tags-inner.rst:9
msgid ""
"Using the @inner tag will mark a symbol as an inner member of its parent "
"symbol. This means it can be referred to by “Parent~Child”."
msgstr "使用@inner标记会将符号标记为其父符号的内部成员. 这意味着它可以被“Parent-Child”引用. "

#: ../../source/tags/tags-inner.rst:12
msgid ""
"Using @inner will override a doclet’s default scope (unless it is in the "
"global scope, in which case it will remain global)."
msgstr "使用@inner将覆盖doclet的默认范围(除非它在全局范围内, 在这种情况下它将保持全局). "

#: ../../source/tags/tags-inner.rst:17
#, fuzzy
msgid "Using @inner to make a virtual doclet an inner member"
msgstr "使用@inner使虚拟doclet成为内部成员"

#: ../../source/tags/tags-inner.rst:28
msgid ""
"Note that in the above we could have used “@function "
"MyNamespace~myFunction” instead of the @memberof and @inner tags."
msgstr "请注意, 在上面我们可以使用“@function MyNamespace~myFunction”而不是@memberof和@inner标签. "

#: ../../source/tags/tags-inner.rst:31
#, fuzzy
msgid "Using @inner"
msgstr "@inner"

#: ../../source/tags/tags-inner.rst:43
msgid ""
"In the above example, we use @inner to force a member of a namespace to "
"be documented as an inner member (by default, it would be a static "
"member). This means that ``foo`` now has the longname ``MyNamespace~foo``"
" instead of ``MyNamespace.foo``."
msgstr ""
"在上面的示例中, 我们使用@inner强制将命名空间的成员记录为内部成员(默认情况下, 它将是一个静态成员). "
"这意味着``foo``现在有了长名``MyNamespace~foo``而不是``MyNamespace.foo``. "

#: ../../source/tags/tags-instance.rst:2
msgid "@instance"
msgstr "@instance"

#: ../../source/tags/tags-instance.rst:6
#, fuzzy
msgid "``@instance``"
msgstr "@instance"

#: ../../source/tags/tags-instance.rst:9
msgid ""
"Using the @instance tag will mark a symbol as an instance member of its "
"parent symbol. This means it can be referred to by “Parent#Child”."
msgstr "使用@instance标记会将符号标记为其父符号的实例成员. 这意味着它可以被“Parent＃Child”引用. "

#: ../../source/tags/tags-instance.rst:12
msgid ""
"Using @instance will override a doclet’s default scope (unless it is in "
"the global scope, in which case it will remain global)."
msgstr "使用@instance将覆盖doclet的默认范围(除非它在全局范围内, 在这种情况下它将保持全局). "

#: ../../source/tags/tags-instance.rst:17
msgid ""
"The following example is a longhand way of writing “@function "
"MyNamespace#myFunction”:"
msgstr "以下示例是编写“@function MyNamespace＃myFunction”的简便方法: "

#: ../../source/tags/tags-instance.rst:20
#, fuzzy
msgid "Using @instance to make a virtual doclet an instance member"
msgstr "使用@inner使虚拟doclet成为内部成员"

#: ../../source/tags/tags-instance.rst:31
msgid ""
"More usefully, you can use the @instance tag to override the scope that "
"JSDoc infers. For example, you can indicate that a static member is used "
"as an instance member:"
msgstr "更有用的是, 您可以使用@instance标记来覆盖JSDoc推断的范围. 例如, 您可以指示静态成员用作实例成员: "

#: ../../source/tags/tags-instance.rst:35
#, fuzzy
msgid "Using @instance to identify an instance member"
msgstr "使用@instance标识实例成员"

#: ../../source/tags/tags-interface.rst:2
msgid "@interface"
msgstr "@interface"

#: ../../source/tags/tags-interface.rst:6
msgid "``@interface [<name>]``"
msgstr "``@interface [<name>]``"

#: ../../source/tags/tags-interface.rst:9 ../../source/tags/tags-package.rst:9
#: ../../source/tags/tags-private.rst:9
msgid "With the JSDoc tag dictionary (enabled by default):"
msgstr "使用JSDoc标记字典(默认启用): "

#: ../../source/tags/tags-interface.rst:11
#, fuzzy
msgid ""
"With the `Closure Compiler <https://github.com/google/closure-"
"compiler/wiki/Annotating-JavaScript-for-the-Closure-Compiler#jsdoc-"
"tags>`_ tag dictionary:"
msgstr ""
"使用`Closure Compiler <https://github.com/google/closure-compiler/wiki"
"/Annotating-JavaScript-for-the-Closure-Compiler#jsdoc-tags>`__标签字典: "

#: ../../source/tags/tags-interface.rst:14
#, fuzzy
msgid ""
"The :rst:dir:`@interface` tag marks a symbol as an interface that other "
"symbols can implement. For example, your code might define a parent class"
" whose methods and properties are stubbed out. You can add the "
":rst:dir:`@interface` tag to the parent class to indicate that child "
"classes must implement the parent class’ methods and properties."
msgstr ""
"``@inter``标签将符号标记为其他符号可以实现的接口. 例如, 您的代码可能会定义一个父类, 其方法和属性被删除. "
"您可以将``@interface``标记添加到父类, 以指示子类必须实现父类的方法和属性. "

#: ../../source/tags/tags-interface.rst:20
#, fuzzy
msgid ""
"Add the :rst:dir:`@interface` tag to the top-level symbol for the "
"interface (for example, a constructor function). You do not need to add "
"the :rst:dir:`@interface` tag to each member of the interface (for "
"example, the interface’s instance methods)."
msgstr ""
"将``@interface``标记添加到接口的顶级符号(例如, 构造函数). 您不需要为接口的每个成员添加``@interface``标记(例如,"
" 接口的实例方法). "

#: ../../source/tags/tags-interface.rst:25
msgid ""
"If you are using the JSDoc tag dictionary (enabled by default), you can "
"also define an interface with virtual comments, rather than by writing "
"code for the interface. See “`Virtual comments that define an interface "
"<#virtual-comments>`__” for an example."
msgstr ""
"如果您使用的是JSDoc标记字典(默认情况下已启用), 您还可以使用虚拟注释定义接口, 而不是通过编写接口的代码. 有关示例, "
"请参阅“`定义接口的虚拟注释<#virtual-comments>`__”. "

#: ../../source/tags/tags-interface.rst:31
msgid ""
"In the following example, the ``Color`` function represents an interface "
"that other classes can implement:"
msgstr "在下面的示例中, ``Color``函数表示其他类可以实现的接口: "

#: ../../source/tags/tags-interface.rst:34
#, fuzzy
msgid "Using the @interface tag"
msgstr "使用@interface标签"

#: ../../source/tags/tags-interface.rst:55
msgid ""
"The following example uses virtual comments, rather than code, to define "
"the ``Color`` interface:"
msgstr "以下示例使用虚拟注释而不是代码来定义“Color”接口: "

#: ../../source/tags/tags-interface.rst:58
#, fuzzy
msgid "Virtual comments that define an interface"
msgstr "定义接口的虚拟注释"

#: ../../source/tags/tags-kind.rst:2
msgid "@kind"
msgstr "@kind"

#: ../../source/tags/tags-kind.rst:6
msgid "``@kind <kindName>``"
msgstr "``@kind <kindName>``"

#: ../../source/tags/tags-kind.rst:8
msgid "where ``<kindName>`` is one of:"
msgstr "其中 ``<kindName>`` 是其中之一:"

#: ../../source/tags/tags-kind.rst:10
msgid "class"
msgstr "class"

#: ../../source/tags/tags-kind.rst:11
msgid "constant"
msgstr "constant"

#: ../../source/tags/tags-kind.rst:12
msgid "event"
msgstr "event"

#: ../../source/tags/tags-kind.rst:13
msgid "external"
msgstr "external"

#: ../../source/tags/tags-kind.rst:14
msgid "file"
msgstr "file"

#: ../../source/tags/tags-kind.rst:15
msgid "function"
msgstr "function"

#: ../../source/tags/tags-kind.rst:16
msgid "member"
msgstr "member"

#: ../../source/tags/tags-kind.rst:17
msgid "mixin"
msgstr "mixin"

#: ../../source/tags/tags-kind.rst:18
msgid "module"
msgstr "module"

#: ../../source/tags/tags-kind.rst:19
msgid "namespace"
msgstr "namespace"

#: ../../source/tags/tags-kind.rst:20
msgid "typedef"
msgstr "typedef"

#: ../../source/tags/tags-kind.rst:24
msgid ""
"The @kind tag is used to document what *kind* of symbol is being "
"documented (for example, a class or a module). The *kind* of symbol "
"differs from a symbol’s *type* (for example, string or boolean)."
msgstr "@kind标记用于记录正在记录的* kind *符号(例如, 类或模块). 符号的*种类*与符号的*类型*不同(例如, 字符串或布尔值). "

#: ../../source/tags/tags-kind.rst:28
#, fuzzy
msgid ""
"Usually you do not need the @kind tag, because the symbol’s kind is "
"determined by other tags in the doclet. For example, using the "
":rst:dir:`@class` tag automatically implies “@kind class”, and using the "
":rst:dir:`@namespace` tag implies “@kind namespace”."
msgstr ""
"通常您不需要@kind标记, 因为符号的类型由doclet中的其他标记确定. 例如, 使用@class标记自动隐含“@kind class”, "
"使用@namespace标记意味着“@kind namespace”. "

#: ../../source/tags/tags-kind.rst:35
#, fuzzy
msgid "Using @kind"
msgstr "@kind"

#: ../../source/tags/tags-kind.rst:52
#, fuzzy
msgid ""
"In the case of tags with conflicting kinds (for example, using both "
":rst:dir:`@module`, which sets the kind to “module”, and “@kind constant”"
" which sets the kind to “constant”), the last tag determines the kind."
msgstr "对于具有冲突类型的标签(例如, 使用将模式设置为“模块”的@module和将类型设置为“常量”的“@kind常量”), 最后一个标签确定种类. "

#: ../../source/tags/tags-kind.rst:56
#, fuzzy
msgid "Conflicting @kind statements"
msgstr "冲突的@kind语句"

#: ../../source/tags/tags-lends.rst:2
msgid "@lends"
msgstr "@lends"

#: ../../source/tags/tags-lends.rst:6
msgid "``@lends <namepath>``"
msgstr "``@lends <namepath>``"

#: ../../source/tags/tags-lends.rst:9
#, fuzzy
msgid ""
"The :rst:dir:`@lends` tag allows you to document all the members of an "
"object literal as if they were members of a symbol with the given name. "
"You might want to do this if you are passing an object literal into a "
"function that creates a named class from its members."
msgstr ""
"``lends``标签允许您记录对象文字的所有成员, 就好像它们是具有给定名称的符号的成员一样. 如果要将对象文字传递给从其成员创建命名类的函数,"
" 则可能需要执行此操作. "

#: ../../source/tags/tags-lends.rst:16
msgid ""
"In this example, we want to use a helper function to make a class named "
"``Person``, along with instance methods named ``initialize`` and ``say``."
" This is similar to how some popular frameworks handle class creation."
msgstr ""
"在这个例子中, 我们想要使用一个辅助函数来创建一个名为``Person``的类, 以及名为``initialize``和``say``的实例方法."
" 这类似于一些流行的框架处理类创建的方式. "

#: ../../source/tags/tags-lends.rst:21
#, fuzzy
msgid "Example class"
msgstr "示例"

#: ../../source/tags/tags-lends.rst:37
#, fuzzy
msgid ""
"Without any comments, JSDoc won’t recognize that this code creates a "
"``Person`` class with two methods. To document the methods, we must use a"
" :rst:dir:`@lends` tag in a doc comment immediately before the object "
"literal. The :rst:dir:`@lends` tag tells JSDoc that all the member names "
"of that object literal are being “loaned” to a variable named ``Person``."
" We must also add comments to each of the methods."
msgstr ""
"没有任何注释, JSDoc将无法识别此代码使用两种方法创建一个``Person``类. 要记录这些方法, "
"我们必须在对象文字之前的doc注释中使用``lends``标记.  "
"``lends``标签告诉JSDoc该对象文字的所有成员名称都被“借给”名为``Person``的变量. 我们还必须为每个方法添加注释. "

#: ../../source/tags/tags-lends.rst:44
msgid "The following example gets us closer to what we want:"
msgstr "The following example gets us closer to what we want:"

#: ../../source/tags/tags-lends.rst:46
#, fuzzy
msgid "Documented as static methods"
msgstr "Documented as static methods"

#: ../../source/tags/tags-lends.rst:71
msgid ""
"Now the functions named ``initialize`` and ``say`` will be documented, "
"but they appear as static methods of the ``Person`` class. That is "
"possibly what you meant, but in this case we want ``initialize`` and "
"``say`` to belong to the instances of the ``Person`` class. So we change "
"things slightly by lending the methods to the class’s prototype:"
msgstr ""
"现在将记录名为``initialize``和``say``的函数, 但它们显示为``Person``类的静态方法. 这可能是你的意思, "
"但在这种情况下, 我们希望``initialize``和``say``属于``Person``类的实例. "
"所以我们通过将方法借给类的原型来稍微改变一下: "

#: ../../source/tags/tags-lends.rst:77
#, fuzzy
msgid "Documented as instance methods"
msgstr "Documented as instance methods"

#: ../../source/tags/tags-lends.rst:102
#, fuzzy
msgid ""
"One final step: Our class framework uses the loaned ``initialize`` "
"function to construct ``Person`` instances, but a ``Person`` instance "
"does not have its own ``initialize`` method. The solution is to add the "
":rst:dir:`@constructs` tag to the loaned function. Remember to remove the"
" :rst:dir:`@class` tag as well, or else two classes will be documented."
msgstr ""
"最后一步: 我们的类框架使用借用的 ``initialize`` 函数来构造 ``Person`` 实例, 但是 ``Person`` "
"实例没有自己的 ``initialize`` 方法. 解决方案是将 ``@constructs`` 标记添加到loaned函数中. 记得删除 "
"``@class`` 标签, 否则将记录两个类. "

#: ../../source/tags/tags-lends.rst:108
#, fuzzy
msgid "Documented with a constructor"
msgstr "用构造函数记录"

#: ../../source/tags/tags-license.rst:2
msgid "@license"
msgstr "@license"

#: ../../source/tags/tags-license.rst:6
msgid "``@license <identifier>``"
msgstr "``@license <identifier>``"

#: ../../source/tags/tags-license.rst:9
#, fuzzy
msgid ""
"The :rst:dir:`@license` tag identifies the software license that applies "
"to any portion of your code."
msgstr "``@license`` 标签标识适用于代码任何部分的软件许可证。"

#: ../../source/tags/tags-license.rst:12
msgid ""
"You can use any text to identify the license you are using. If your code "
"uses a standard open-source license, consider using the appropriate "
"identifier from the `Software Package Data Exchange (SPDX) License List "
"<https://spdx.org/licenses/>`__."
msgstr ""
"您可以使用任何文本来标识您正在使用的许可证. 如果您的代码使用标准的开源许可证, "
"请考虑使用“软件包数据交换(SPDX)许可证列表<https://spdx.org/licenses/>`__中的相应标识符. "

#: ../../source/tags/tags-license.rst:17
#, fuzzy
msgid ""
"Some JavaScript processing tools, such as Google’s Closure Compiler, will"
" automatically preserve any JSDoc comment that includes a "
":rst:dir:`@license` tag. If you are using one of these tools, you may "
"wish to add a standalone JSDoc comment that includes the "
":rst:dir:`@license` tag, along with the entire text of the license, so "
"that the license text will be included in generated JavaScript files."
msgstr ""
"一些JavaScript处理工具, 例如Google的Closure Compiler, 将自动保留包含“@ "
"license``标记的任何JSDoc注释. 如果您使用这些工具之一, 您可能希望添加包含“@ "
"license``标记的独立JSDoc注释以及许可证的完整文本, 以便许可证文本将包含在生成的JavaScript文件中. "

#: ../../source/tags/tags-license.rst:26
#, fuzzy
msgid "A module that is distributed under the Apache License 2.0"
msgstr "在Apache License 2.0下分发的模块"

#: ../../source/tags/tags-license.rst:35
#, fuzzy
msgid "A standalone JSDoc comment with the complete MIT license"
msgstr "具有完整MIT许可证的独立JSDoc注释"

#: ../../source/tags/tags-listens.rst:2
msgid "@listens"
msgstr "@listens"

#: ../../source/tags/tags-listens.rst:6
#, fuzzy
msgid "`@listens <eventName>`"
msgstr "``@listens <eventName>``"

#: ../../source/tags/tags-listens.rst:9
#, fuzzy
msgid ""
"The :rst:dir:`@listens` tag indicates that a symbol listens for the "
"specified event. Use the :rst:dir:`@event` to document the event’s "
"content."
msgstr ""
" ``@listens``标记表示符号侦听指定的事件. 使用```@event tag`` <tags-"
"event.html>`__来记录事件的内容. "

#: ../../source/tags/tags-listens.rst:14
msgid ""
"The following example shows how to document an event named "
"``module:hurler~event:snowball``, as well as a method named "
"``module:playground/monitor.reportThrowage`` that listens for the event."
msgstr ""
"下面的示例演示如何记录名为``module: hurler~event: snowball``的事件, 以及一个名为``module: "
"playground/ monitor.reportThrowage``的方法, 用于侦听事件. "

#: ../../source/tags/tags-listens.rst:18
#, fuzzy
msgid "Documenting an event and its listener"
msgstr "记录事件及其监听器"

#: ../../source/tags/tags-member.rst:2
msgid "@member (synonyms: @var)"
msgstr ""

#: ../../source/tags/tags-member.rst:6
msgid ":rst:dir:`@var`"
msgstr ""

#: ../../source/tags/tags-member.rst:7
msgid "``@member [<type>] [<name>]``"
msgstr "``@member [<type>] [<name>]``"

#: ../../source/tags/tags-member.rst:11
msgid ""
"The @member tag identifies any member that does not have a more "
"specialized kind, such as “class”, “function”, or “constant”. A member "
"can optionally have a type as well as a name."
msgstr "@member标记标识任何没有更专业类型的成员, 例如“class”, “function”或“constant”. 成员可以选择具有类型和名称. "

#: ../../source/tags/tags-member.rst:17
#, fuzzy
msgid "Using @member with Data#point"
msgstr "使用@member和Data＃point"

#: ../../source/tags/tags-member.rst:26
msgid ""
"Here is an example of using @var, a synonym of @member, to document a "
"(virtual) variable ‘foo’."
msgstr "下面是使用@var(@member的同义词)来记录(虚拟)变量'foo'的示例. "

#: ../../source/tags/tags-member.rst:29
#, fuzzy
msgid "Using @var to document a virtual member"
msgstr "使用@var记录虚拟成员"

#: ../../source/tags/tags-member.rst:37
msgid "The above example is equivalent to the following:"
msgstr "以上示例等同于以下内容:"

#: ../../source/tags/tags-member.rst:49
msgid ":rst:dir:`@member`"
msgstr ""

#: ../../source/tags/tags-memberof.rst:2
msgid "@memberof"
msgstr "@memberof"

#: ../../source/tags/tags-memberof.rst:8
msgid "``@memberof <parentNamepath>``"
msgstr "``@memberof <parentNamepath>``"

#: ../../source/tags/tags-memberof.rst:9
msgid "``@memberof! <parentNamepath>``"
msgstr "``@memberof! <parentNamepath>``"

#: ../../source/tags/tags-memberof.rst:13
msgid ""
"The @memberof tag identifies a member symbol that belongs to a parent "
"symbol."
msgstr "@memberof标记标识属于父符号的成员符号. "

#: ../../source/tags/tags-memberof.rst:16
#, fuzzy
msgid ""
"By default, the @memberof tag documents member symbols as static members."
" For inner and instance members, you can use scoping punctuation after "
"the namepath, or you can add the :rst:dir:`@inner` or "
":rst:dir:`@instance` tag."
msgstr ""
"默认情况下, @ memberof标记将成员符号记录为静态成员. 对于内部和实例成员, 您可以在名称路径后使用作用域标点符号, "
"或者您可以添加[@inner] \\`inner-tag <tags-inner.html>`__或[@instance] "
"\\`instance-tag <tags-instance.html>`__ tag. "

#: ../../source/tags/tags-memberof.rst:20
msgid ""
"The “forced” @memberof tag, @memberof!, forces the object to be "
"documented as belonging to a specific parent even if it appears to have a"
" different parent."
msgstr "“强制”@memberof标记@memberof！强制将对象记录为属于特定父级, 即使它看起来具有不同的父级. "

#: ../../source/tags/tags-memberof.rst:26
msgid ""
"In the following example, the ``hammer`` function would normally be "
"documented as a global function. That’s because, in fact, it is a global "
"function, but it is also a member of the ``Tools`` namespace, and that’s "
"how you wish to document it. The solution is to add a @memberof tag:"
msgstr ""
"在下面的例子中, ``hammer``函数通常被记录为全局函数. 这是因为, 事实上, 它是一个全局函数, "
"但它也是``Tools``命名空间的成员, 这就是你希望如何记录它. 解决方案是添加@memberof标记: "

#: ../../source/tags/tags-memberof.rst:31
#, fuzzy
msgid "Using @memberof"
msgstr "@memberof"

#: ../../source/tags/tags-memberof.rst:43
msgid ""
"For instance members of a class, use the syntax “@memberof "
"ClassName.prototype” or “@memberof ClassName#”. Alternatively, you can "
"combine “@memberof ClassName” with the “@instance” tag."
msgstr ""
"在下面的示例中, ``hammer``函数通常记录为全局函数. 这是因为, 事实上, 它是一个全局函数, "
"但它也是``Tools``命名空间的成员, 这就是你想要记录它的方式. 解决方案是添加@memberof标记: "

#: ../../source/tags/tags-memberof.rst:47
#, fuzzy
msgid "Using @memberof with a class prototype"
msgstr "使用@memberof和类原型"

#: ../../source/tags/tags-memberof.rst:81
msgid ""
"The following example uses the forced @memberof tag, “@memberof!”, to "
"document a property of an object (Data#point) that is an instance member "
"of a class (Data)."
msgstr "以下示例使用强制@memberof标记“@memberof！”来记录作为类(Data)的实例成员的对象(Data＃point)的属性. "

#: ../../source/tags/tags-memberof.rst:85
msgid ""
"When you use the @property tag to document a property, you cannot link to"
" the property using its longname. We can force the property to be "
"linkable by using “@alias” and “@memberof!” to tell JSDoc that "
"Data#point.y should be documented as a member “point.y” of “Data#”, "
"rather than a member “y” of “point” of “Data#”."
msgstr ""
"使用@property标记来记录属性时, 无法使用其长名称链接到该属性. "
"我们可以通过使用“@alias”和“@memberof！”强制属性可以链接, 告诉JSDoc "
"Data＃point.y应该记录为“Data＃”的成员“point.y”, 而不是成员“数据＃”的“点”的“y”. "

#: ../../source/tags/tags-memberof.rst:91
#, fuzzy
msgid "Using @memberof! for object properties"
msgstr "使用@memberof！对于对象属性"

#: ../../source/tags/tags-mixes.rst:2
msgid "@mixes"
msgstr "@mixes"

#: ../../source/tags/tags-mixes.rst:6
msgid "``@mixes <OtherObjectPath>``"
msgstr "``@mixes <OtherObjectPath>``"

#: ../../source/tags/tags-mixes.rst:9
#, fuzzy
msgid ""
"The @mixes tag indicates that the current object mixes in all the members"
" from ``OtherObjectPath``, which is a :rst:dir:`@mixin`."
msgstr ""
"@mixes标签表示当前对象混合了``OtherObjectPath``的所有成员, 这是一个[@mixin] \\`mixin-tag "
"<tags-mixin.html>`__. "

#: ../../source/tags/tags-mixes.rst:14
#, fuzzy
msgid "To start, we document a mixin with the :rst:dir:`@mixin` tag:"
msgstr "首先, 我们使用[@mixin] \\`mixin-tag <tags-mixin.html>`__标签记录mixin: "

#: ../../source/tags/tags-mixes.rst:16
#, fuzzy
msgid "Example of a :rst:dir:`@mixin`"
msgstr "Example of a @mixin"

#: ../../source/tags/tags-mixes.rst:45
#, fuzzy
msgid ""
"Now we add a FormButton class and call a “mix” function that mixes all of"
" the Eventful functions into FormButton, so that FormButton can also fire"
" events and have listeners. We use the :rst:dir:`@mixes` tag to indicate "
"that FormButton mixes the Eventful functions."
msgstr ""
"现在我们添加一个FormButton类并调用一个“混合”函数, 它将所有Eventful函数混合到FormButton中, "
"这样FormButton也可以触发事件并拥有监听器. 我们使用@mixes标记来指示FormButton混合了Eventful函数. "

#: ../../source/tags/tags-mixes.rst:50
#, fuzzy
msgid "Using the :rst:dir:`@mixes` tag"
msgstr "Using the @mixes tag"

#: ../../source/tags/tags-mixin.rst:2
msgid "@mixin"
msgstr "@mixin"

#: ../../source/tags/tags-mixin.rst:6
msgid "``@mixin [<MixinName>]``"
msgstr "``@mixin [<MixinName>]``"

#: ../../source/tags/tags-mixin.rst:9
#, fuzzy
msgid ""
"A mixin provides functionality that is intended to be added to other "
"objects. If desired, you can use the @mixin tag to indicate that an "
"object is a mixin. You can then add the :rst:dir:`@mixes` tag to objects "
"that use the mixin."
msgstr ""
"mixin提供了旨在添加到其他对象的功能. 如果需要, 可以使用@mixin标记指示对象是mixin. 然后, "
"您可以将@mixes标记添加到使用mixin的对象. "

#: ../../source/tags/tags-mixin.rst:16
#, fuzzy
msgid "Using :rst:dir:`@mixin`"
msgstr "@mixin"

#: ../../source/tags/tags-module.rst:2
msgid "@module"
msgstr "@module"

#: ../../source/tags/tags-module.rst:6
msgid "``@module [[{<type>}] <moduleName>]``"
msgstr "``@module [[{<type>}] <moduleName>]``"

#: ../../source/tags/tags-module.rst:12
#, fuzzy
msgid "If you provide a type, you *must* also provide a name."
msgstr "Note: If you provide a type, you *must* also provide a name."

#: ../../source/tags/tags-module.rst:14
msgid ""
"The @module tag marks the current file as being its own module. All "
"symbols in the file are assumed to be members of the module unless "
"documented otherwise."
msgstr "@module标记将当前文件标记为自己的模块. 除非另有说明, 否则假定文件中的所有符号都是模块的成员. "

#: ../../source/tags/tags-module.rst:18
#, fuzzy
msgid ""
"Link to a module (e.g. within a [@link]\\ :rst:dir:`link` or [@see]\\ "
":rst:dir:`see` tag) using “module:moduleName”. For example, “@module "
"foo/bar” can be linked to using “{@link module:foo/bar}”."
msgstr ""
"链接到模块(例如在[@link] \\`link-tag <tags-inline-link.html>`__或[@see] \\`see-tag"
" <tags-see.html>`__ tag中)使用“module: moduleName”. 例如, “@ module foo/ "
"bar”可以链接到使用“{@link module: foo/ bar}”. "

#: ../../source/tags/tags-module.rst:22
msgid ""
"If the module name is not provided, it is derived from the module’s path "
"and filename. For example, suppose I have a file ``test.js``, located in "
"the ``src`` directory, that contains the block comment ``/** @module "
"*/``. Here are some scenarios for running JSDoc and the resulting module "
"names for test.js:"
msgstr ""
"如果未提供模块名称, 则它是从模块的路径和文件名派生的. 例如, 假设我有一个位于``src``目录下的文件``test.js``, "
"它包含块注释``/ ** @module */``. 以下是运行JSDoc的一些场景以及test.js的结果模块名称: "

#: ../../source/tags/tags-module.rst:30
#, fuzzy
msgid "Derived module names if none is provided."
msgstr "如果未提供, 则派生模块名称. "

#: ../../source/tags/tags-module.rst:42
msgid ""
"The following example shows the namepaths that are used for symbols in a "
"module. The first symbol is a module-private, or “inner,” variable–it can"
" be only accessed within the module. The second symbol is a static "
"function that is exported by the module."
msgstr "以下示例显示了用于模块中符号的名称路径. 第一个符号是模块私有或“内部”变量 - 它只能在模块中访问. 第二个符号是由模块导出的静态函数. "

#: ../../source/tags/tags-module.rst:47
#, fuzzy
msgid "Basic @module use"
msgstr "Basic @module use"

#: ../../source/tags/tags-module.rst:58
msgid ""
"When an exported symbol is defined as a member of ``module.exports``, "
"``exports``, or ``this``, JSDoc infers that the symbol is a static member"
" of the module."
msgstr ""
"当导出的符号被定义为``module.exports``, ``exports``或``this``的成员时, "
"JSDoc推断符号是模块的静态成员. "

#: ../../source/tags/tags-module.rst:62
msgid ""
"In the following example, the Book class is documented as a static "
"member, “module:bookshelf.Book”, with one instance member, "
"“module:bookshelf.Book#title”."
msgstr ""
"在下面的示例中, Book类被记录为静态成员“module: bookshelf.Book”, 其中包含一个实例成员“module: "
"bookshelf.Book＃title”. "

#: ../../source/tags/tags-module.rst:66
#, fuzzy
msgid "Defining exported symbols as a member of ‘this’"
msgstr "将导出的符号定义为'this'的成员"

#: ../../source/tags/tags-module.rst:76
msgid ""
"In the following example, the two functions have the namepaths "
"“module:color/mixer.blend” and “module:color/mixer.darken”."
msgstr ""
"在以下示例中, 这两个函数的名称路径为“module: color/ mixer.blend”和“module: color/ "
"mixer.darken”. "

#: ../../source/tags/tags-module.rst:79
#, fuzzy
msgid "Defining exported symbols as a member of ‘module.exports’ or ‘exports’"
msgstr "将导出的符号定义为'this'的成员"

#: ../../source/tags/tags-module.rst:90
msgid ""
"See `Documenting JavaScript Modules <howto-commonjs-modules.html>`__ for "
"further examples."
msgstr "有关更多示例, 请参阅`记录JavaScript模块<howto-commonjs-modules.html>`__. "

#: ../../source/tags/tags-name.rst:2
msgid "@name"
msgstr "@name"

#: ../../source/tags/tags-name.rst:6
msgid "``@name <namePath>``"
msgstr "``@name <namePath>``"

#: ../../source/tags/tags-name.rst:9
msgid ""
"The @name tag forces JSDoc to associate the remainder of the JSDoc "
"comment with the given name, ignoring all surrounding code. This tag is "
"best used in “virtual comments” for symbols that are not readily visible "
"in the code, such as methods that are generated at runtime."
msgstr ""
"@name标记强制JSDoc将JSDoc注释的其余部分与给定名称相关联, 忽略所有周围的代码. "
"对于在代码中不易看到的符号(例如在运行时生成的方法), 此标记最好用于“虚拟注释”. "

#: ../../source/tags/tags-name.rst:14
msgid ""
"When you use the @name tag, you must provide additional tags that tell "
"JSDoc what kind of symbol you are documenting; whether the symbol is a "
"member of another symbol; and so on. If you do not provide this "
"information, the symbol will not be documented correctly."
msgstr ""
"当您使用@name标记时, 您必须提供其他标记, 告诉JSDoc您正在记录哪种符号;符号是否是另一个符号的成员;等等. 如果您不提供此信息, "
"则无法正确记录该符号. "

#: ../../source/tags/tags-name.rst:20
msgid ""
"By using the @name tag, you are telling JSDoc to *ignore the surrounding "
"code* and treat your documentation comment in isolation. In many cases, "
"it is best to use the [@alias tag]\\ :rst:dir:`alias` instead, which "
"changes a symbol’s name in the documentation but preserves other "
"information about the symbol."
msgstr ""

#: ../../source/tags/tags-name.rst:28
msgid ""
"The following example shows how to use the @name tag to document a "
"function that JSDoc would not normally recognize."
msgstr "以下示例显示如何使用@name标记来记录JSDoc通常无法识别的函数. "

#: ../../source/tags/tags-name.rst:31
#, fuzzy
msgid "Using the @name tag"
msgstr "使用@name标签"

#: ../../source/tags/tags-namespace.rst:2
msgid "@namespace"
msgstr "@namespace"

#: ../../source/tags/tags-namespace.rst:6
msgid "``@namespace [[{<type>}] <SomeName>]``"
msgstr "``@namespace [[{<type>}] <SomeName>]``"

#: ../../source/tags/tags-namespace.rst:9
msgid ""
"The @namespace tag indicates that an object creates a namespace for its "
"members. You can also write a virtual JSDoc comment that defines a "
"namespace used by your code."
msgstr "@namespace标记表示对象为其成员创建名称空间. 您还可以编写一个虚拟JSDoc注释, 用于定义代码使用的命名空间. "

#: ../../source/tags/tags-namespace.rst:13
msgid ""
"If a namespace is defined by a symbol other than an object literal, you "
"can include a type expression along with the @namespace tag. If the "
"@namespace tag includes a type, it must also include a name."
msgstr ""
"如果命名空间由对象文字以外的符号定义, 则可以包含类型表达式以及@namespace标记. 如果@namespace标记包含类型, "
"则它还必须包含名称. "

#: ../../source/tags/tags-namespace.rst:17
msgid ""
"You may need to document a namespace whose name includes unusual "
"characters, such as “#” or “!”. In these cases, when you document or link"
" to the namespace, you must add quotation marks around the portion of the"
" namespace that includes unusual characters. See the examples below for "
"details."
msgstr ""
"您可能需要记录名称中包含不常用字符的名称空间, 例如“＃”或“！”. 在这些情况下, 当您记录或链接到命名空间时, "
"必须在包含不常用字符的命名空间部分周围添加引号. 有关详细信息, 请参阅以下示例"

#: ../../source/tags/tags-namespace.rst:25
#, fuzzy
msgid "Using the @namespace tag with an object"
msgstr "将@namespace标记与对象一起使用"

#: ../../source/tags/tags-namespace.rst:39
#, fuzzy
msgid "Using the @namespace tag for virtual comments"
msgstr "使用@namespace标记进行虚拟评论"

#: ../../source/tags/tags-namespace.rst:53
msgid ""
"If a @namespace includes a symbol whose name has unusual characters, you "
"must enclose the symbol’s name in double quotes. If the symbol’s name "
"already contains one or more double quotes, escape the double quotes with"
" a leading backslash (\\)."
msgstr ""
"如果@namespace包含名称具有异常字符的符号, 则必须将符号的名称括在双引号中. 如果符号的名称已包含一个或多个双引号, "
"请使用前导反斜杠(\\)转义双引号. "

#: ../../source/tags/tags-namespace.rst:58
#, fuzzy
msgid "Using the @namespace tag with unusual member names"
msgstr "使用带有不寻常成员名称的@namespace标记"

#: ../../source/tags/tags-override.rst:2
msgid "@override"
msgstr "@override"

#: ../../source/tags/tags-override.rst:6
#, fuzzy
msgid "``@override``"
msgstr "@override"

#: ../../source/tags/tags-override.rst:9
#, fuzzy
msgid ""
"The :rst:dir:`@override` tag indicates that a symbol overrides a symbol "
"with the same name in a parent class."
msgstr " ``@override``标记表示符号覆盖父类中具有相同名称的符号. "

#: ../../source/tags/tags-override.rst:12
#, fuzzy
msgid ""
"This tag is provided for compatibility with `Closure Compiler "
"<https://developers.google.com/closure/compiler/>`_. By default, JSDoc "
"automatically identifies symbols that override a parent."
msgstr ""
"提供此标记是为了与“Closure Compiler "
"<https://developers.google.com/closure/compiler/>`__兼容. 默认情况下, "
"JSDoc会自动识别覆盖父级的符号. "

#: ../../source/tags/tags-override.rst:15
#, fuzzy
msgid ""
"If your JSDoc comment includes the :rst:dir:`@inheritdoc`, you do not "
"need to include the :rst:dir:`@override` tag. The presence of the "
":rst:dir:`@inheritdoc` tag implies the presence of the "
":rst:dir:`@override` tag."
msgstr ""
"如果您的JSDoc注释包含`@inheritdoc标记<tags-inheritdoc.html>`__, 则不需要包含 "
"``@override``标记.   ``@inheritdoc``标签的存在意味着存在 ``@override``标签. "

#: ../../source/tags/tags-override.rst:21
msgid ""
"The following example shows how to indicate that a method overrides a "
"method in its parent class:"
msgstr "以下示例显示如何指示方法覆盖其父类中的方法: "

#: ../../source/tags/tags-override.rst:24
#, fuzzy
msgid "Method that overrides a parent"
msgstr "覆盖父级的方法"

#: ../../source/tags/tags-package.rst:2
msgid "@package"
msgstr "@package"

#: ../../source/tags/tags-package.rst:6
msgid "``@package [{typeExpression}]``"
msgstr "``@package [{typeExpression}]``"

#: ../../source/tags/tags-package.rst:11
#, fuzzy
msgid ""
":rst:dir:`@package` With the `Closure Compiler <https://github.com/google"
"/closure-compiler/wiki/Annotating-JavaScript-for-the-Closure-Compiler"
"#jsdoc-tags>`_"
msgstr ""
"使用`Closure Compiler <https://github.com/google/closure-compiler/wiki"
"/Annotating-JavaScript-for-the-Closure-Compiler#jsdoc-tags>`__标签字典: "

#: ../../source/tags/tags-package.rst:13
msgid "tag dictionary:"
msgstr ""

#: ../../source/tags/tags-package.rst:15
#, fuzzy
msgid ""
"The :rst:dir:`@package` tag marks a symbol as package-private. Typically,"
" this tag indicates that a symbol is available only to code in the same "
"directory as the source file for this symbol. This tag is available in "
"JSDoc 3.5.0 and later."
msgstr ""
"``package``标签将符号标记为package-private. 通常, 此标记表示符号仅可用于与此符号的源文件位于同一目录中的代码. "
"此标记在JSDoc 3.5.0及更高版本中可用. "

#: ../../source/tags/tags-package.rst:20
#, fuzzy
msgid ""
"By default, symbols marked with the :rst:dir:`@package` tag will appear "
"in your documentation. In JSDoc 3.3.0 and later, you can use the "
"``-a/--access`` :ref:`command-line` to change this behavior."
msgstr ""
"默认情况下, 标有“@ package`”标记的符号将出现在您的文档中. 在JSDoc 3.3.0及更高版本中, "
"您可以使用```-a/--access``命令行选项<about-commandline.html>`__来更改此行为. "

#: ../../source/tags/tags-package.rst:25
#, fuzzy
msgid "The :rst:dir:`@package` tag is equivalent to ``@access package``."
msgstr "``package``标签相当于``@access package``. "

#: ../../source/tags/tags-package.rst:29
msgid ""
"In the following example, the instance member ``Thingy#_bar`` appears in "
"the generated documentation, but with an annotation indicating that it is"
" package-private:"
msgstr "在下面的示例中, 实例成员``Thingy＃_bar``出现在生成的文档中, 但带有一个注释, 表明它是包私有的:"

#: ../../source/tags/tags-package.rst:33
#, fuzzy
msgid "Using the @package tag"
msgstr "使用@package标签"

#: ../../source/tags/tags-param.rst:2
msgid "@param (synonyms: @arg, @argument)"
msgstr ""

#: ../../source/tags/tags-param.rst:6
msgid ":rst:dir:`@arg`, :rst:dir:`@argument`"
msgstr ""

#: ../../source/tags/tags-param.rst:10
#, fuzzy
msgid ""
"The :rst:dir:`@param` tag provides the name, type, and description of a "
"function parameter."
msgstr "``@param``标签提供函数参数的名称, 类型和描述. "

#: ../../source/tags/tags-param.rst:13
#, fuzzy
msgid ""
"The :rst:dir:`@param` tag requires you to specify the name of the "
"parameter you are documenting. You can also include the parameter’s type,"
" enclosed in curly brackets, and a description of the parameter."
msgstr "``@param``标签要求您指定要记录的参数的名称. 您还可以包含参数的类型, 用大括号括起来, 以及参数的说明. "

#: ../../source/tags/tags-param.rst:17
msgid ""
"The parameter type can be a built-in JavaScript type, such as ``string`` "
"or ``Object``, or a :ref:`namepaths` to another symbol in your code. If "
"you have written documentation for the symbol at that namepath, JSDoc "
"will automatically link to the documentation for that symbol. You can "
"also use a type expression to indicate, for example, that a parameter is "
"not nullable or can accept any type; see the :rst:dir:`@type` for "
"details."
msgstr ""

#: ../../source/tags/tags-param.rst:25
msgid ""
"If you provide a description, you can make the JSDoc comment more "
"readable by inserting a hyphen before the description. Be sure to include"
" a space before and after the hyphen."
msgstr "如果您提供描述, 则可以通过在描述之前插入连字符来使JSDoc注释更具可读性. 务必在连字符前后加一个空格. "

#: ../../source/tags/tags-param.rst:31
#, fuzzy
msgid "**Names, types, and descriptions**"
msgstr "名称, 类型和说明"

#: ../../source/tags/tags-param.rst:33
#, fuzzy
msgid ""
"The following examples show how to include names, types, and descriptions"
" in a :rst:dir:`@param` tag."
msgstr "以下示例显示如何在``@param``标记中包含名称, 类型和描述. "

#: ../../source/tags/tags-param.rst:35
msgid "Name only"
msgstr "仅限姓名"

#: ../../source/tags/tags-param.rst:45
#, fuzzy
msgid "Name and type"
msgstr "名称和类型"

#: ../../source/tags/tags-param.rst:55
#, fuzzy
msgid "Name, type, and description"
msgstr "名称, 类型和说明"

#: ../../source/tags/tags-param.rst:65
msgid ""
"You can add a hyphen before the description to make it more readable. Be "
"sure to include a space before and after the hyphen."
msgstr "您可以在说明之前添加连字符, 以使其更具可读性. 务必在连字符前后加一个空格. "

#: ../../source/tags/tags-param.rst:68
msgid "Name, type, and description, with a hyphen before the description"
msgstr "名称, 类型和描述, 在描述之前用连字符表示"

#: ../../source/tags/tags-param.rst:78
#, fuzzy
msgid "**Parameters with properties**"
msgstr "记录参数的属性"

#: ../../source/tags/tags-param.rst:80
#, fuzzy
msgid ""
"If a parameter is expected to have a specific property, you can document "
"that property by providing an additional :rst:dir:`@param` tag. For "
"example, if an ``employee`` parameter is expected to have ``name`` and "
"``department`` properties, you can document it as follows:"
msgstr ""
"如果参数具有特定属性, 则可以通过提供附加的``@param``标记来记录该属性. 例如, "
"如果``employee``参数需要具有``name``和``department``属性, 则可以按如下方式记录: "

#: ../../source/tags/tags-param.rst:85
#, fuzzy
msgid "Documenting a parameter’s properties"
msgstr "记录参数的属性"

#: ../../source/tags/tags-param.rst:98
msgid ""
"If a parameter is destructured without an explicit name, you can give the"
" object an appropriate one and document its properties."
msgstr "如果参数在没有显式名称的情况下被解构, 则可以为对象提供适当的参数并记录其属性. "

#: ../../source/tags/tags-param.rst:101
#, fuzzy
msgid "Documenting a destructuring parameter"
msgstr "记录解构参数"

#: ../../source/tags/tags-param.rst:114
msgid ""
"You can also combine this syntax with JSDoc’s syntax for array "
"parameters. For example, if multiple employees can be assigned to a "
"project:"
msgstr "您还可以将此语法与JSDoc的数组参数语法结合使用. 例如, 如果可以为项目分配多个员工: "

#: ../../source/tags/tags-param.rst:118
#, fuzzy
msgid "Documenting properties of values in an array"
msgstr "记录数组中值的属性"

#: ../../source/tags/tags-param.rst:131
#, fuzzy
msgid "**Optional parameters and default values**"
msgstr "Optional parameters and default values"

#: ../../source/tags/tags-param.rst:133
msgid ""
"The following examples show how to indicate that a parameter is optional "
"and has a default value."
msgstr ""
"The following examples show how to indicate that a parameter is optional "
"and has a default value."

#: ../../source/tags/tags-param.rst:136
#, fuzzy
msgid "An optional parameter (using JSDoc syntax)"
msgstr "An optional parameter (using JSDoc syntax)"

#: ../../source/tags/tags-param.rst:149
#, fuzzy
msgid "An optional parameter (using Google Closure Compiler syntax)"
msgstr "An optional parameter (using JSDoc syntax)"

#: ../../source/tags/tags-param.rst:162
#, fuzzy
msgid "An optional parameter and default value"
msgstr "Optional parameters and default values"

#: ../../source/tags/tags-param.rst:175
msgid "**Multiple types and repeatable parameters**"
msgstr ""

#: ../../source/tags/tags-param.rst:177
#, fuzzy
msgid ""
"The following examples show how to use type expressions to indicate that "
"a parameter can accept multiple types (or any type), and that a parameter"
" can be provided more than once. See the :rst:dir:`@type` for details "
"about the type expressions that JSDoc supports."
msgstr ""
"The following examples show how to use type expressions to indicate that "
"a parameter can accept multiple types (or any type), and that a parameter"
" can be provided more than once. See the `@type  tag documentation <tags-"
"type.html>`__ for details about the type expressions that JSDoc supports."

#: ../../source/tags/tags-param.rst:182
#, fuzzy
msgid "Allows one type OR another type (type union)"
msgstr "Allows one type OR another type (type union)"

#: ../../source/tags/tags-param.rst:197
#, fuzzy
msgid "Allows any type"
msgstr "Allows any type"

#: ../../source/tags/tags-param.rst:207
#, fuzzy
msgid "Allows a parameter to be repeated"
msgstr "Allows a parameter to be repeated"

#: ../../source/tags/tags-param.rst:222
msgid "**Callback functions**"
msgstr ""

#: ../../source/tags/tags-param.rst:224
#, fuzzy
msgid ""
"If a parameter accepts a callback function, you can use the "
":rst:dir:`@callback` to define a callback type, then include the callback"
" type in the :rst:dir:`@param` tag."
msgstr ""
"If a parameter accepts a callback function, you can use the `@callback  "
"tag <tags-callback.html>`__ to define a callback type, then include the "
"callback type in the ``@param`` tag."

#: ../../source/tags/tags-param.rst:228
#, fuzzy
msgid "Parameters that accept a callback"
msgstr "Parameters that accept a callback"

#: ../../source/tags/tags-param.rst:249 ../../source/tags/tags-param.rst:253
msgid ":rst:dir:`@param`"
msgstr ""

#: ../../source/tags/tags-private.rst:2
msgid "@private"
msgstr "@private"

#: ../../source/tags/tags-private.rst:6
msgid "``@private [{typeExpression}]``"
msgstr "``@private [{typeExpression}]``"

#: ../../source/tags/tags-private.rst:11
#, fuzzy
msgid ""
":rst:dir:`@private` With the `Closure Compiler <https://github.com/google"
"/closure-compiler/wiki/Annotating-JavaScript-for-the-Closure-Compiler"
"#jsdoc-tags>`_ tag dictionary:"
msgstr ""
"使用`Closure Compiler <https://github.com/google/closure-compiler/wiki"
"/Annotating-JavaScript-for-the-Closure-Compiler#jsdoc-tags>`__标签字典: "

#: ../../source/tags/tags-private.rst:14
#, fuzzy
msgid ""
"The :rst:dir:`@private` tag marks a symbol as private, or not meant for "
"general use. Private members are not shown in the generated output unless"
" JSDoc is run with the ``-p/--private`` command-line option. In JSDoc "
"3.3.0 and later, you can also use the ``-a/--access`` `command-line`_ to "
"change this behavior."
msgstr ""
"The ``@private`` tag marks a symbol as private, or not meant for general "
"use. Private members are not shown in the generated output unless JSDoc "
"is run with the ``-p/--private`` command-line option. In JSDoc 3.3.0 and "
"later, you can also use the ```-a/--access`` command-line option <about-"
"commandline.html>`__ to change this behavior."

#: ../../source/tags/tags-private.rst:19
#, fuzzy
msgid ""
"The :rst:dir:`@private` tag is not inherited by child members. For "
"example, if the :rst:dir:`@private` tag is added to a namespace, members "
"of the namespace can still appear in the generated output; because the "
"namespace is private, the members’ namepath will not include the "
"namespace."
msgstr ""
"The ``@private`` tag is not inherited by child members. For example, if "
"the ``@private`` tag is added to a namespace, members of the namespace "
"can still appear in the generated output; because the namespace is "
"private, the members’ namepath will not include the namespace."

#: ../../source/tags/tags-private.rst:24
#, fuzzy
msgid "The :rst:dir:`@private` tag is equivalent to ``@access private``."
msgstr "The ``@private`` tag is equivalent to ``@access private``."

#: ../../source/tags/tags-private.rst:28
msgid ""
"In the following example, ``Documents`` and ``Documents.Newspaper`` "
"appear in the generated documentation, but not ``Documents.Diary``."
msgstr ""
"In the following example, ``Documents`` and ``Documents.Newspaper`` "
"appear in the generated documentation, but not ``Documents.Diary``."

#: ../../source/tags/tags-private.rst:31
#, fuzzy
msgid "Using the @private tag"
msgstr "Using the @private tag"

#: ../../source/tags/tags-property.rst:2
msgid "@property (synonyms: @prop)"
msgstr ""

#: ../../source/tags/tags-property.rst:6
msgid ":rst:dir:`@prop`"
msgstr ""

#: ../../source/tags/tags-property.rst:9
#, fuzzy
msgid ""
"the @property tag is a way to easily document a list of static properties"
" of a class, namespace or other object."
msgstr ""
"The @property tag is a way to easily document a list of static properties"
" of a class, namespace or other object."

#: ../../source/tags/tags-property.rst:12
msgid ""
"Normally JSDoc templates would create an entire new page to display "
"information about each level of a nested namespace hierarchy. Sometimes "
"what you really want is to just list all the properties, including nested"
" properties, all together on the same page."
msgstr ""
"Normally JSDoc templates would create an entire new page to display "
"information about each level of a nested namespace hierarchy. Sometimes "
"what you really want is to just list all the properties, including nested"
" properties, all together on the same page."

#: ../../source/tags/tags-property.rst:17
msgid ""
"Note that property tags must be used in doc comments for the thing that "
"they are properties of, a namespace or a class for example. This tag is "
"intended for simple collections of static properties, it does not allow "
"you to provide @examples or similar complex information for each "
"property, just the type, name and description."
msgstr ""
"Note that property tags must be used in doc comments for the thing that "
"they are properties of, a namespace or a class for example. This tag is "
"intended for simple collections of static properties, it does not allow "
"you to provide @examples or similar complex information for each "
"property, just the type, name and description."

#: ../../source/tags/tags-property.rst:25
msgid ""
"In this example we have a namespace named “config.” We want all the "
"information about the defaults property, including its nested values, to "
"appear on the same page with the documentation for config."
msgstr ""
"In this example we have a namespace named “config.” We want all the "
"information about the defaults property, including its nested values, to "
"appear on the same page with the documentation for config."

#: ../../source/tags/tags-property.rst:29
#, fuzzy
msgid "A namespace with defaults and nested default properties"
msgstr "A namespace with defaults and nested default properties"

#: ../../source/tags/tags-property.rst:50
msgid "The following example shows how to indicate that a property is optional."
msgstr "The following example shows how to indicate that a property is optional."

#: ../../source/tags/tags-property.rst:52
#, fuzzy
msgid "A type definition with required and optional property"
msgstr "A type definition with required and optional property"

#: ../../source/tags/tags-property.rst:65
#, fuzzy
msgid ":rst:dir:`@property`"
msgstr ""

#: ../../source/tags/tags-protected.rst:2
msgid "@protected"
msgstr ""

#: ../../source/tags/tags-protected.rst:6 ../../source/tags/tags-readonly.rst:6
msgid "``@protected [{typeExpression}]``"
msgstr ""

#: ../../source/tags/tags-protected.rst:9
#, fuzzy
msgid ""
"With the JSDoc tag dictionary (enabled by default): @protected With the "
"`Closure Compiler <https://github.com/google/closure-compiler/wiki"
"/Annotating-JavaScript-for-the-Closure-Compiler#jsdoc-tags>`_ tag "
"dictionary:"
msgstr ""
"使用`Closure Compiler <https://github.com/google/closure-compiler/wiki"
"/Annotating-JavaScript-for-the-Closure-Compiler#jsdoc-tags>`__标签字典: "

#: ../../source/tags/tags-protected.rst:12
#, fuzzy
msgid ""
"The :rst:dir:`@protected` tag marks a symbol as protected. Typically, "
"this tag indicates that a symbol is only available, or should only be "
"used, within the current module."
msgstr ""
"The ``@protected`` tag marks a symbol as protected. Typically, this tag "
"indicates that a symbol is only available, or should only be used, within"
" the current module."

#: ../../source/tags/tags-protected.rst:16
#, fuzzy
msgid ""
"By default, symbols marked with the :rst:dir:`@protected` tag will appear"
" in your documentation. In JSDoc 3.3.0 and later, you can use the "
"``-a/--access`` :ref:`command-line` to change this behavior."
msgstr ""
"By default, symbols marked with the ``@protected`` tag will appear in "
"your documentation. In JSDoc 3.3.0 and later, you can use the "
"```-a/--access`` command-line option <about-commandline.html>`__ to "
"change this behavior."

#: ../../source/tags/tags-protected.rst:21
#, fuzzy
msgid "The :rst:dir:`@protected` tag is equivalent to ``@access protected``."
msgstr "The ``@protected`` tag is equivalent to ``@access protected``."

#: ../../source/tags/tags-protected.rst:25
msgid ""
"In the following example, the instance member ``Thingy#_bar`` appears in "
"the generated documentation, but with an annotation indicating that it is"
" protected:"
msgstr ""
"In the following example, the instance member ``Thingy#_bar`` appears in "
"the generated documentation, but with an annotation indicating that it is"
" protected:"

#: ../../source/tags/tags-protected.rst:29
#, fuzzy
msgid "Using the @protected tag"
msgstr "Using the @protected tag"

#: ../../source/tags/tags-public.rst:2
msgid "@public"
msgstr "@public"

#: ../../source/tags/tags-public.rst:6
#, fuzzy
msgid "``@public``"
msgstr "@public"

#: ../../source/tags/tags-public.rst:9
#, fuzzy
msgid ""
"The :rst:dir:`@public` tag indicates that a symbol should be documented "
"as if it were public."
msgstr ""
"The ``@public`` tag indicates that a symbol should be documented as if it"
" were public."

#: ../../source/tags/tags-public.rst:12
#, fuzzy
msgid ""
"By default, JSDoc treats all symbols as public, so using this tag does "
"not normally affect the generated documentation. However, you may prefer "
"to use the :rst:dir:`@public` tag explicitly so it is clear to others "
"that you intended to make the symbol public."
msgstr ""
"By default, JSDoc treats all symbols as public, so using this tag does "
"not normally affect the generated documentation. However, you may prefer "
"to use the ``@public`` tag explicitly so it is clear to others that you "
"intended to make the symbol public."

#: ../../source/tags/tags-public.rst:17
#, fuzzy
msgid ""
"In JSDoc 3, the :rst:dir:`@public` tag does *not* affect a symbol’s "
"scope. Use the :rst:dir:`@instance`, :rst:dir:`@static`, and "
":rst:dir:`@global` tags to change a symbol’s scope."
msgstr ""
"In JSDoc 3, the ``@public`` tag does *not* affect a symbol’s scope. Use "
"the :rst:dir:`@instance`, :rst:dir:`@static`, and :rst:dir:`@global` tags"
" to change a symbol’s scope."

#: ../../source/tags/tags-public.rst:22
#, fuzzy
msgid "Using the @public tag"
msgstr "Using the @public tag"

#: ../../source/tags/tags-readonly.rst:2
msgid "@read"
msgstr "@read"

#: ../../source/tags/tags-readonly.rst:9
msgid ""
"The @readonly tag indicates that a symbol is intended to be read-only. "
"Note this is for the purpose of documentation only - JSDoc won’t check "
"whether you’ve *actually* treated the symbol as read-only in your code."
msgstr ""
"The @readonly tag indicates that a symbol is intended to be read-only. "
"Note this is for the purpose of documentation only - JSDoc won’t check "
"whether you’ve *actually* treated the symbol as read-only in your code."

#: ../../source/tags/tags-readonly.rst:15
#, fuzzy
msgid "Using the @readonly tag"
msgstr "Using the @readonly tag"

#: ../../source/tags/tags-readonly.rst:25
#, fuzzy
msgid "Using the @readonly tag with a getter"
msgstr "Using the @readonly tag with a getter"

#: ../../source/tags/tags-requires.rst:2
msgid "@requires"
msgstr "@requires"

#: ../../source/tags/tags-requires.rst:6
msgid "``@requires <someModuleName>``"
msgstr "``@requires <someModuleName>``"

#: ../../source/tags/tags-requires.rst:9
msgid ""
"The @requires tag allows you to document that a module is needed to use "
"this code. A JSDoc comment can have multiple @require tags. The module "
"name can be specified as “moduleName” or “module:moduleName”; both forms "
"will be interpreted as modules."
msgstr ""
"The @requires tag allows you to document that a module is needed to use "
"this code. A JSDoc comment can have multiple @require tags. The module "
"name can be specified as “moduleName” or “module:moduleName”; both forms "
"will be interpreted as modules."

#: ../../source/tags/tags-requires.rst:14
msgid ""
"JSDoc does not attempt to process the module that is being included. If "
"you want the module to be included in the documentation, you must include"
" the module in the list of JavaScript files to process."
msgstr ""
"JSDoc does not attempt to process the module that is being included. If "
"you want the module to be included in the documentation, you must include"
" the module in the list of JavaScript files to process."

#: ../../source/tags/tags-requires.rst:20
#, fuzzy
msgid "Using the @requires tag"
msgstr "Using the @requires tag"

#: ../../source/tags/tags-returns.rst:2
msgid "@return (synonyms: @return)"
msgstr ""

#: ../../source/tags/tags-returns.rst:6
msgid ":rst:dir:`@return`"
msgstr ""

#: ../../source/tags/tags-returns.rst:7
msgid "``@returns [{type}] [description]``"
msgstr "``@returns [{type}] [description]``"

#: ../../source/tags/tags-returns.rst:11
#, fuzzy
msgid "The :rst:dir:`@returns` tag documents the value that a function returns."
msgstr "The ``@returns`` tag documents the value that a function returns."

#: ../../source/tags/tags-returns.rst:13
#, fuzzy
msgid ""
"If you are documenting a generator function, use the :rst:dir:`@yields` "
"instead of this tag."
msgstr ""
"If you are documenting a generator function, use the `@yields tag <tags-"
"yields.html>`__ instead of this tag."

#: ../../source/tags/tags-returns.rst:17
#, fuzzy
msgid "Return value with a type"
msgstr "Return value with a type"

#: ../../source/tags/tags-returns.rst:30
#, fuzzy
msgid "Return value with a type and description"
msgstr "Return value with a type and description"

#: ../../source/tags/tags-returns.rst:43
#, fuzzy
msgid "Return value with multiple types"
msgstr "Return value with multiple types"

#: ../../source/tags/tags-returns.rst:60
#, fuzzy
msgid "Returns a promise"
msgstr "Returns a promise"

#: ../../source/tags/tags-returns.rst:77
msgid ":rst:dir:`@returns`"
msgstr ""

#: ../../source/tags/tags-see.rst:2
msgid "@see"
msgstr "@see"

#: ../../source/tags/tags-see.rst:8
msgid "``@see <namepath>``"
msgstr "``@see <namepath>``"

#: ../../source/tags/tags-see.rst:9
msgid "``@see <text>``"
msgstr "``@see <text>``"

#: ../../source/tags/tags-see.rst:13
msgid ""
"The @see tag allows you to refer to another symbol or resource that may "
"be related to the one being documented. You can provide either a symbol’s"
" namepath or free-form text. If you provide a namepath, JSDoc’s default "
"template automatically converts the namepath to a link."
msgstr ""
"The @see tag allows you to refer to another symbol or resource that may "
"be related to the one being documented. You can provide either a symbol’s"
" namepath or free-form text. If you provide a namepath, JSDoc’s default "
"template automatically converts the namepath to a link."

#: ../../source/tags/tags-see.rst:20
#, fuzzy
msgid "Using the @see tag"
msgstr "Using the @see tag"

#: ../../source/tags/tags-since.rst:2
msgid "@since"
msgstr "@since"

#: ../../source/tags/tags-since.rst:6
msgid "``@since <versionDescription>``"
msgstr "``@since <versionDescription>``"

#: ../../source/tags/tags-since.rst:9
msgid ""
"The @since tag indicates that a class, method, or other symbol was added "
"in a specific version."
msgstr ""
"The @since tag indicates that a class, method, or other symbol was added "
"in a specific version."

#: ../../source/tags/tags-since.rst:14
#, fuzzy
msgid "Using the @since tag"
msgstr "Using the @since tag"

#: ../../source/tags/tags-static.rst:2
msgid "@static"
msgstr "@static"

#: ../../source/tags/tags-static.rst:6
#, fuzzy
msgid "``@static``"
msgstr "@static"

#: ../../source/tags/tags-static.rst:9
msgid ""
"The @static tag indicates that a symbol is contained within a parent and "
"can be accessed without instantiating the parent."
msgstr ""
"The @static tag indicates that a symbol is contained within a parent and "
"can be accessed without instantiating the parent."

#: ../../source/tags/tags-static.rst:12
msgid ""
"Using the @static tag will override a symbol’s default scope, with one "
"exception: Symbols in global scope will remain global."
msgstr ""
"Using the @static tag will override a symbol’s default scope, with one "
"exception: Symbols in global scope will remain global."

#: ../../source/tags/tags-static.rst:17
msgid ""
"The following example has the same effect as writing “@function "
"MyNamespace.myFunction” and omitting the @memberof and @static tags:"
msgstr ""
"The following example has the same effect as writing “@function "
"MyNamespace.myFunction” and omitting the @memberof and @static tags:"

#: ../../source/tags/tags-static.rst:20
#, fuzzy
msgid "Using @static in a virtual comment"
msgstr "在虚拟评论中使用@static"

#: ../../source/tags/tags-static.rst:31
msgid ""
"The following example forces a module’s inner member to be documented as "
"a static member:"
msgstr ""
"The following example forces a module’s inner member to be documented as "
"a static member:"

#: ../../source/tags/tags-static.rst:34
#, fuzzy
msgid "Using @static to override the default scope"
msgstr "使用@static覆盖默认范围"

#: ../../source/tags/tags-summary.rst:2
msgid "@summary"
msgstr "@summary"

#: ../../source/tags/tags-summary.rst:6
msgid "``@summary Summary goes here.``"
msgstr "``@summary 总结就在这里. ``"

#: ../../source/tags/tags-summary.rst:9
msgid ""
"The @summary tag is a shorter version of the full description. It can be "
"added to any doclet."
msgstr ""
"The @summary tag is a shorter version of the full description. It can be "
"added to any doclet."

#: ../../source/tags/tags-this.rst:2
msgid "@this"
msgstr "@this"

#: ../../source/tags/tags-this.rst:6
msgid "``@this <namePath>``"
msgstr "``@this <namePath>``"

#: ../../source/tags/tags-this.rst:9
msgid ""
"The @this tag indicates what the ``this`` keyword refers to when used "
"within another symbol."
msgstr ""
"The @this tag indicates what the ``this`` keyword refers to when used "
"within another symbol."

#: ../../source/tags/tags-this.rst:13
msgid ""
"In the following example, the @this tag causes “this.name” to be "
"documented as “Greeter#name” rather than a global symbol called “name”."
msgstr ""
"In the following example, the @this tag causes “this.name” to be "
"documented as “Greeter#name” rather than a global symbol called “name”."

#: ../../source/tags/tags-throws.rst:2
msgid "@throws (synonyms: @exception)"
msgstr ""

#: ../../source/tags/tags-throws.rst:6
msgid ":rst:dir:`@exception`"
msgstr ""

#: ../../source/tags/tags-throws.rst:9
msgid "``@throws free-form description``"
msgstr "``@throws 自由形式的描述``"

#: ../../source/tags/tags-throws.rst:10
msgid "``@throws {<type>}``"
msgstr "``@throws {<type>}``"

#: ../../source/tags/tags-throws.rst:11
msgid "``@throws {<type>} free-form description``"
msgstr "``@throws {<type>} 自由形式的描述``"

#: ../../source/tags/tags-throws.rst:15
msgid ""
"The @throws tag allows you to document an error that a function might "
"throw. You can include the @throws tag more than once in a single JSDoc "
"comment."
msgstr ""
"The @throws tag allows you to document an error that a function might "
"throw. You can include the @throws tag more than once in a single JSDoc "
"comment."

#: ../../source/tags/tags-throws.rst:21
#, fuzzy
msgid "Using the @throws tag with a type"
msgstr "使用带有类型的@throws标记"

#: ../../source/tags/tags-throws.rst:29
#, fuzzy
msgid "Using the @throws tag with a description"
msgstr "将@throws标记与描述一起使用"

#: ../../source/tags/tags-throws.rst:37
#, fuzzy
msgid "Using the @throws tag with a type and description"
msgstr "使用带有类型和描述的@throws标记"

#: ../../source/tags/tags-throws.rst:48
msgid ":rst:dir:`@throws`"
msgstr ""

#: ../../source/tags/tags-todo.rst:2
msgid "@todo"
msgstr "@todo"

#: ../../source/tags/tags-todo.rst:6
#, fuzzy
msgid "``@todo`` text describing thing to do."
msgstr "``@todo文字描述要做的事情. ``"

#: ../../source/tags/tags-todo.rst:9
msgid ""
"The @todo tag allows you to document tasks to be completed for some part "
"of your code. You can use the @todo tag more than once in a single JSDoc "
"comment."
msgstr ""
"The @todo tag allows you to document tasks to be completed for some part "
"of your code. You can use the @todo tag more than once in a single JSDoc "
"comment."

#: ../../source/tags/tags-todo.rst:15
#, fuzzy
msgid "Using the @todo tag"
msgstr "使用@todo标记"

#: ../../source/tags/tags-tutorial.rst:2
msgid "@tutorial"
msgstr "@tutorial"

#: ../../source/tags/tags-tutorial.rst:6
msgid "``@tutorial <tutorialID>``"
msgstr ""

#: ../../source/tags/tags-tutorial.rst:9
#, fuzzy
msgid ""
"The :rst:dir:`@tutorial` tag inserts a link to a tutorial file that is "
"provided as part of the documentation. See the :ref:`tutorials` for "
"instructions on creating tutorials."
msgstr ""
"The ``@tutorial`` tag inserts a link to a tutorial file that is provided "
"as part of the documentation. See the `tutorials overview <about-"
"tutorials.html>`__ for instructions on creating tutorials."

#: ../../source/tags/tags-tutorial.rst:13
#, fuzzy
msgid ""
"You can use the :rst:dir:`@tutorial` tag more than once in a single JSDoc"
" comment."
msgstr ""
"You can use the ``@tutorial`` tag more than once in a single JSDoc "
"comment."

#: ../../source/tags/tags-tutorial.rst:17
msgid ""
"In the following example, the documentation for ``MyClass`` will link to "
"the tutorials that have the identifiers ``tutorial-1`` and "
"``tutorial-2``:"
msgstr ""
"In the following example, the documentation for ``MyClass`` will link to "
"the tutorials that have the identifiers ``tutorial-1`` and "
"``tutorial-2``:"

#: ../../source/tags/tags-tutorial.rst:20
#, fuzzy
msgid "Using the @tutorial tag"
msgstr "使用@tutorial标签"

#: ../../source/tags/tags-type.rst:2
msgid "@type"
msgstr "@type"

#: ../../source/tags/tags-type.rst:8
msgid "``@type {typeName}``"
msgstr "``@type {typeName}``"

#: ../../source/tags/tags-type.rst:12
#, fuzzy
msgid ""
"The @type tag allows you to provide a type expression identifying the "
"type of value that a symbol may contain, or the type of value returned by"
" a function. You can also include type expressions with many other JSDoc "
"tags, such as the [@param tag]\\ :rst:dir:`param`."
msgstr ""
"The @type tag allows you to provide a type expression identifying the "
"type of value that a symbol may contain, or the type of value returned by"
" a function. You can also include type expressions with many other JSDoc "
"tags, such as the [@param tag]\\ `param-tag <tags-param.html>`__."

#: ../../source/tags/tags-type.rst:17
msgid ""
"A type expression can include the JSDoc namepath to a symbol (for "
"example, ``myNamespace.MyClass``); a built-in JavaScript type (for "
"example, ``string``); or a combination of these. You can use any `Google "
"Closure Compiler type expression <https://github.com/google/closure-"
"compiler/wiki/Annotating-JavaScript-for-the-Closure-Compiler#type-"
"expressions>`__, as well as several other formats that are specific to "
"JSDoc."
msgstr ""
"A type expression can include the JSDoc namepath to a symbol (for "
"example, ``myNamespace.MyClass``); a built-in JavaScript type (for "
"example, ``string``); or a combination of these. You can use any `Google "
"Closure Compiler type expression <https://github.com/google/closure-"
"compiler/wiki/Annotating-JavaScript-for-the-Closure-Compiler#type-"
"expressions>`__, as well as several other formats that are specific to "
"JSDoc."

#: ../../source/tags/tags-type.rst:23
msgid ""
"If JSDoc determines that a type expression is invalid, it will display an"
" error and stop running. You can turn this error into a warning by "
"running JSDoc with the ``--lenient`` option."
msgstr ""
"If JSDoc determines that a type expression is invalid, it will display an"
" error and stop running. You can turn this error into a warning by "
"running JSDoc with the ``--lenient`` option."

#: ../../source/tags/tags-type.rst:28
#, fuzzy
msgid ""
"Full support for Google Closure Compiler-style type expressions is "
"available in JSDoc 3.2 and later. Earlier versions of JSDoc included "
"partial support for Closure Compiler type expressions."
msgstr ""
"**Note**: Full support for Google Closure Compiler-style type expressions"
" is available in JSDoc 3.2 and later. Earlier versions of JSDoc included "
"partial support for Closure Compiler type expressions."

#: ../../source/tags/tags-type.rst:32
msgid ""
"Each type is specified by providing a type expression, using one of the "
"formats described below. Where appropriate, JSDoc will automatically "
"create links to the documentation for other symbols. For example, ``@type"
" {MyClass}`` will link to the MyClass documentation if that symbol has "
"been documented."
msgstr ""
"Each type is specified by providing a type expression, using one of the "
"formats described below. Where appropriate, JSDoc will automatically "
"create links to the documentation for other symbols. For example, ``@type"
" {MyClass}`` will link to the MyClass documentation if that symbol has "
"been documented."

#: ../../source/tags/tags-type.rst:39
msgid "Type List"
msgstr ""

#: ../../source/tags/tags-type.rst:43
msgid "Type name"
msgstr "输入名称"

#: ../../source/tags/tags-type.rst:44
msgid "Syntax examples"
msgstr "语法示例"

#: ../../source/tags/tags-type.rst:45
msgid "Description"
msgstr "描述"

#: ../../source/tags/tags-type.rst:46
msgid "Symbol name (name expression)"
msgstr "符号名称(名称表达式)"

#: ../../source/tags/tags-type.rst:52
msgid ""
"Specifies the name of a symbol. If you have documented the symbol, JSDoc "
"creates a link to the documentation for that symbol."
msgstr "指定符号的名称. 如果您已记录该符号, JSDoc将创建指向该符号的文档的链接. "

#: ../../source/tags/tags-type.rst:53
msgid "Multiple types (type union)"
msgstr "多种类型(类型联合)"

#: ../../source/tags/tags-type.rst:54
#, fuzzy
msgid "This can be a number or a boolean."
msgstr "**这可以是数字或布尔值. **"

#: ../../source/tags/tags-type.rst:60
#, fuzzy
msgid ""
"This means a value can have one of several types, with the entire list of"
" types enclosed in parentheses and separated by |."
msgstr "这意味着一个值可以有几种类型之一, 整个类型列表括在括号中并用\\ |分隔. "

#: ../../source/tags/tags-type.rst:61
msgid "Arrays and objects (type applications and record types)"
msgstr "数组和对象(类型应用程序和记录类型)"

#: ../../source/tags/tags-type.rst:62
#, fuzzy
msgid "An array of MyClass instances::"
msgstr "****一组MyClass实例. ****"

#: ../../source/tags/tags-type.rst:68
#, fuzzy
msgid "An object with string keys and number values::"
msgstr "**具有字符串键和数字值的对象: **"

#: ../../source/tags/tags-type.rst:72
#, fuzzy
msgid ""
"An object called 'myObj' with properties 'a' (a number), 'b' (a string) "
"and 'c' (any type)::"
msgstr "**一个名为'myObj'的对象, 其属性为'a'(数字), 'b'(字符串)和'c'(任何类型). **"

#: ../../source/tags/tags-type.rst:81
#, fuzzy
msgid ""
"JSDoc supports Closure Compiler's syntax for defining array and object "
"types."
msgstr "JSDoc支持Closure Compiler用于定义数组和对象类型的语法. "

#: ../../source/tags/tags-type.rst:83
msgid ""
"You can also indicate an array by appending [] to the type that is "
"contained in the array. For example, the expression string[] indicates an"
" array of strings."
msgstr "您还可以通过将[]附加到数组中包含的类型来指示数组. 例如, 表达式string []表示字符串数组. "

#: ../../source/tags/tags-type.rst:85
#, fuzzy
msgid ""
"For objects that have a known set of properties, you can use Closure "
"Compiler's syntax for documenting record types. You can document each "
"property individually, which enables you to provide more detailed "
"information about each property."
msgstr ""
"对于具有已知属性集的对象, 可以使用Closure Compiler的语法来记录记录类型. 您可以单独记录每个属性, "
"这使您可以提供有关每个属性的更多详细信息. "

#: ../../source/tags/tags-type.rst:86
msgid "Nullable type"
msgstr "可空类型"

#: ../../source/tags/tags-type.rst:87
#, fuzzy
msgid "A number or null::"
msgstr "**数字或null. **"

#: ../../source/tags/tags-type.rst:91
msgid "This indicates that the type is either the specified type, or null."
msgstr "这表示类型是指定的类型, 或者为null. "

#: ../../source/tags/tags-type.rst:92
msgid "Non-nullable type"
msgstr "非可空类型"

#: ../../source/tags/tags-type.rst:93
#, fuzzy
msgid "A number, but never null::"
msgstr "**一个数字, 但永远不会为空. **"

#: ../../source/tags/tags-type.rst:97
msgid "Indicates that the value is of the specified type, but cannot be null."
msgstr "指示该值是指定类型, 但不能为null. "

#: ../../source/tags/tags-type.rst:98
msgid "Variable number of that type"
msgstr "该类型的可变数量"

#: ../../source/tags/tags-type.rst:99
#, fuzzy
msgid "This function accepts a variable number of numeric parameters::"
msgstr "**此函数接受可变数量的数字参数. **"

#: ../../source/tags/tags-type.rst:103
#, fuzzy
msgid ""
"Indicates that the function accepts a variable number of parameters, and "
"specifies a type for the parameters. For example::"
msgstr "表示该函数接受可变数量的参数, 并指定参数的类型. 例如:"

#: ../../source/tags/tags-type.rst:117
msgid "Optional parameter"
msgstr "可选参数"

#: ../../source/tags/tags-type.rst:118
#, fuzzy
msgid "An optional parameter named foo::"
msgstr "可选参数和默认值"

#: ../../source/tags/tags-type.rst:124
#, fuzzy
msgid "An optional parameter foo with default value 1::"
msgstr "可选参数和默认值"

#: ../../source/tags/tags-type.rst:128
#, fuzzy
msgid ""
"Indicates that the parameter is optional. When using JSDoc's syntax for "
"optional parameters, you can also indicate the value that will be used if"
" a parameter is omitted."
msgstr "表示该参数是可选的. 将JSDoc的语法用于可选参数时, 还可以指示在省略参数时将使用的值. "

#: ../../source/tags/tags-type.rst:129
msgid "Callbacks"
msgstr "回调"

#: ../../source/tags/tags-type.rst:140
#, fuzzy
msgid ""
"Document a callback using the @callback tag. The syntax is identical to "
"the @typedef tag, except that a callback's type is always \"function.\""
msgstr "使用@callback标记记录回调. 语法与@typedef标记相同, 只是回调的类型始终是“function”. "

#: ../../source/tags/tags-type.rst:141
msgid "Type definitions"
msgstr "类型定义"

#: ../../source/tags/tags-type.rst:142
#, fuzzy
msgid "Documenting a type with properties 'id', 'name', 'age'::"
msgstr "**记录具有属性 ‘id’, ‘name’, ‘age’ 的类型.**"

#: ../../source/tags/tags-type.rst:155
msgid ""
"You can document complex types using the @typedef tag, then refer to the "
"type definition elsewhere in your documentation."
msgstr "您可以使用@typedef标记记录复杂类型, 然后参考文档中其他位置的类型定义. "

#: ../../source/tags/tags-type.rst:166
msgid ""
"In many cases, you can include a type expression as part of another tag, "
"rather than including a separate @type tag in your JSDoc comment."
msgstr "在许多情况下, 您可以将类型表达式作为另一个标记的一部分包含在内, 而不是在JSDoc注释中包含单独的@type标记. "

#: ../../source/tags/tags-type.rst:169
#, fuzzy
msgid "Type expressions can accompany many tags."
msgstr "类型表达式可以伴随许多标签. "

#: ../../source/tags/tags-typedef.rst:2
msgid "@typedef"
msgstr "@typedef"

#: ../../source/tags/tags-typedef.rst:6
msgid "``@typedef [<type>] <namepath>``"
msgstr "``@typedef [<type>] <namepath>``"

#: ../../source/tags/tags-typedef.rst:9
#, fuzzy
msgid ""
"The @typedef tag is useful for documenting custom types, particularly if "
"you wish to refer to them repeatedly. These types can then be used within"
" other tags expecting a type, such as [@type]\\ :rst:dir:`type` or "
"[@param]\\ :rst:dir:`param`."
msgstr ""
"@typedef标记对于记录自定义类型很有用, 特别是如果您希望重复引用它们. 然后可以在期望类型的其他标记中使用这些类型, 例如[@type] "
"\\`type-tag <tags-type.html>`__或[@param] \\`param-tag <tags-param.  "
"HTML>`__. "

#: ../../source/tags/tags-typedef.rst:14
#, fuzzy
msgid ""
"Use the [@callback]\\ :rst:dir:`callback` tag to document the type of "
"callback functions."
msgstr "使用[@callback] \\`callback-tag <tags-callback.html>`__标记来记录回调函数的类型. "

#: ../../source/tags/tags-typedef.rst:19
msgid ""
"This example defines a union type for parameters that can contain either "
"numbers or strings that represent numbers."
msgstr "此示例为参数定义联合类型, 该参数可以包含表示数字的数字或字符串. "

#: ../../source/tags/tags-typedef.rst:22
#, fuzzy
msgid "Using the @typedef tag"
msgstr "使用@typedef标签"

#: ../../source/tags/tags-typedef.rst:37
msgid ""
"This example defines a more complex type, an object with several "
"properties, and sets its namepath so it will be displayed along with the "
"class that uses the type. Because the type definition is not actually "
"exposed by the class, it is customary to document the type definition as "
"an inner member."
msgstr ""
"此示例定义了一个更复杂的类型, 一个具有多个属性的对象, 并设置其名称路径, 以便它与使用该类型的类一起显示. 因为类实际上没有公开类型定义, "
"所以习惯上将类型定义记录为内部成员. "

#: ../../source/tags/tags-typedef.rst:43
#, fuzzy
msgid "Using @typedef to document a complex type for a class"
msgstr "使用@typedef记录类的复杂类型"

#: ../../source/tags/tags-variation.rst:2
msgid "@variation"
msgstr "@variation"

#: ../../source/tags/tags-variation.rst:6
msgid "``@variation <variationNumber>``"
msgstr "``@variation <variationNumber>``"

#: ../../source/tags/tags-variation.rst:9
msgid ""
"Sometimes your code may include multiple symbols with the same longname. "
"For example, you might have both a global class and a top-level namespace"
" called ``Widget``. In cases such as these, what does “{@link Widget}” or"
" “@memberof Widget” mean? The global namespace, or the global class?"
msgstr ""
"有时您的代码可能包含多个具有相同长名称的符号. 例如, 您可能同时拥有一个全局类和一个名为``Widget``的顶级命名空间. 在这些情况下, "
"“{@link Widget}”或“@memberof Widget”是什么意思？全局命名空间, 还是全局类？"

#: ../../source/tags/tags-variation.rst:15
#, fuzzy
msgid ""
"Variations help JSDoc distinguish between different symbols with the same"
" longname. For example, if “@variation 2” is added to the JSDoc comment "
"for the Widget class, “{@link Widget(2)}” will refer to the class, and "
"“{@link Widget}” will refer to the namespace. Alternatively, you can "
"include the variation when you specify the symbol’s with tags such as "
"[@alias]\\ :rst:dir:`alias` or [@name]\\ :rst:dir:`name` (for example, "
"“@alias Widget(2)”)."
msgstr ""
"变体帮助JSDoc区分具有相同长名称的不同符号. 例如, 如果将“@variation 2”添加到Widget类的JSDoc注释中, "
"则“{@link Widget(2)}”将引用该类, “{@link Widget}”将引用该命名空间. 或者, "
"您可以在使用标签指定符号时包含变体, 例如[@alias] \\`alias-tag <tags-alias.html>`__或[@name] "
"\\`name-tag <tags-name .html>`__(例如, “@ alias Widget(2)”). "

#: ../../source/tags/tags-variation.rst:23
msgid ""
"You can provide any value with the @variation tag, as long as the "
"combination of the value and the longname results in a globally unique "
"version of the longname. As a best practice, use a predictable pattern "
"for choosing the values, which will make it easier for you to document "
"your code."
msgstr ""
"您可以使用@variation标记提供任何值, 只要value和longname的组合产生全名唯一的longname版本即可. 作为最佳实践, "
"使用可预测的模式来选择值, 这将使您更容易记录代码. "

#: ../../source/tags/tags-variation.rst:31
msgid ""
"The following example uses the @variation tag to distinguish between the "
"Widget class and the Widget namespace."
msgstr "以下示例使用@variation标记来区分Widget类和Widget命名空间. "

#: ../../source/tags/tags-variation.rst:34
#, fuzzy
msgid "Using the @variation tag"
msgstr "使用@variation标签"

#: ../../source/tags/tags-version.rst:2
msgid "@version"
msgstr "@version"

#: ../../source/tags/tags-version.rst:6
#, fuzzy
msgid "``@version``"
msgstr "@version"

#: ../../source/tags/tags-version.rst:9
msgid ""
"Documents the version of an item. The text following the @version tag "
"will be used to denote the version of the item."
msgstr "记录项目的版本.  @version标记后面的文本将用于表示项目的版本. "

#: ../../source/tags/tags-version.rst:14
#, fuzzy
msgid "Using the @version tag"
msgstr "使用@version标记"

#: ../../source/tags/tags-yields.rst:2
msgid "@yields (synonyms: @yield)"
msgstr ""

#: ../../source/tags/tags-yields.rst:6
msgid ":rst:dir:`@yield`"
msgstr ""

#: ../../source/tags/tags-yields.rst:7
msgid "``@yields [{type}] [description]``"
msgstr "``@yields [{type}] [description]``"

#: ../../source/tags/tags-yields.rst:10
#, fuzzy
msgid ""
"The :rst:dir:`@yields` tag documents the value that is yielded by a "
"generator function. This tag is available in JSDoc 3.5.0 and later."
msgstr "``yield``标签记录了生成器函数产生的值. 此标记在JSDoc 3.5.0及更高版本中可用. "

#: ../../source/tags/tags-yields.rst:13
#, fuzzy
msgid ""
"If you are documenting a regular function, use the :rst:dir:`@returns` "
"instead of this tag."
msgstr "如果要记录常规函数, 请使用`@returns标记<tags-returns.html>`__而不是此标记. "

#: ../../source/tags/tags-yields.rst:17
#, fuzzy
msgid "@yields tag with a type"
msgstr "@yields 带有类型的标签"

#: ../../source/tags/tags-yields.rst:27
#, fuzzy
msgid "@yields tag with a type and description"
msgstr "@yields 标签的类型和描述"

#: ../../source/tags/tags-yields.rst:39
msgid ":rst:dir:`@yields`"
msgstr ""

#~ msgid ""
#~ "For pre-ES2015 classes, use this "
#~ "tag in combination with the `@class  "
#~ "or ``@constructor`` tag <tags-class.html>`__."
#~ msgstr ""

#~ msgid "{% endexample %}"
#~ msgstr "{% endexample %}"

#~ msgid "{% example %}"
#~ msgstr "{% example %}"

#~ msgid "File description"
#~ msgstr "File description"

#~ msgid "Using @inner"
#~ msgstr "Using @inner"

#~ msgid "Using @kind"
#~ msgstr "Using @kind"

#~ msgid "Example class"
#~ msgstr "Example class"

#~ msgid "Using @memberof"
#~ msgstr "Using @memberof"

#~ msgid "Using @mixin"
#~ msgstr "Using @mixin"

#~ msgid "Name only"
#~ msgstr "Name only"

#~ msgid "Name, type, and description"
#~ msgstr "Name, type, and description"

#~ msgid "An optional parameter and default value"
#~ msgstr "An optional parameter and default value"

#~ msgid "This can be a number or a boolean."
#~ msgstr "This can be a number or a boolean."

#~ msgid "An array of MyClass instances."
#~ msgstr "An array of MyClass instances."

#~ msgid "An object with string keys and number values:"
#~ msgstr "An object with string keys and number values:"

#~ msgid "A number or null."
#~ msgstr "A number or null."

#~ msgid "A number, but never null."
#~ msgstr "A number, but never null."

#~ msgid "An optional parameter named foo."
#~ msgstr "An optional parameter named foo."

#~ msgid "An optional parameter foo with default value 1."
#~ msgstr "An optional parameter foo with default value 1."

#~ msgid "Documenting a type with properties ‘id’, ‘name’, ‘age’."
#~ msgstr "Documenting a type with properties ‘id’, ‘name’, ‘age’."

#~ msgid "Example"
#~ msgstr "Example"

#~ msgid ""
#~ "{% example “Parent class with abstract"
#~ " method, and child class that "
#~ "implements the method” %}"
#~ msgstr ""

#~ msgid ""
#~ "{% example “A doclet with both a"
#~ " constructor function description and a "
#~ "class description” %}"
#~ msgstr ""

#~ msgid ""
#~ "{% example “Document that the old "
#~ "function has been deprecated since "
#~ "version 2.0” %}"
#~ msgstr ""

#~ msgid ""
#~ "{% example “Using @instance to make "
#~ "a virtual doclet an instance member” "
#~ "%}"
#~ msgstr ""

#~ msgid ""
#~ "{% example “Defining exported symbols as"
#~ " a member of ‘module.exports’ or "
#~ "‘exports’” %}"
#~ msgstr ""

#~ msgid ""
#~ "{% example “Name, type, and description,"
#~ " with a hyphen before the "
#~ "description” %}"
#~ msgstr ""

#~ msgid ""
#~ "{% example “An optional parameter (using"
#~ " Google Closure Compiler syntax)” %}"
#~ msgstr ""

#~ msgid ""
#~ "{% example “An object called ‘myObj’ "
#~ "with properties ‘a’ (a number), ‘b’ "
#~ "(a string) and ‘c’ (any type).” %}"
#~ msgstr ""

#~ msgid ""
#~ "{% example “This function accepts a "
#~ "variable number of numeric parameters.” "
#~ "%}"
#~ msgstr ""

#~ msgid ""
#~ "For pre-ES2015 classes, use this "
#~ "tag in combination with the `@class  "
#~ "or ``@constructor`` `tag <tags-class.html>`__."
#~ msgstr ""

#~ msgid ""
#~ "If your JSDoc comment includes the "
#~ "`@inheritdoc  tag <tags-inheritdoc.html>`__, "
#~ "you do not need to include the "
#~ "``@override`` tag. The presence of the"
#~ " ``@inheritdoc`` tag implies the presence"
#~ " of the ``@override`` tag."
#~ msgstr ""

#~ msgid ""
#~ "If you are documenting a generator "
#~ "function, use the `@yields  tag "
#~ "<tags-yields.html>`__ instead of this tag."
#~ msgstr ""

#~ msgid ""
#~ "If you are documenting a regular "
#~ "function, use the `@returns  tag "
#~ "<tags-returns.html>`__ instead of this tag."
#~ msgstr ""

#~ msgid "@class"
#~ msgstr "@class"

#~ msgid "``@deprecated [<some text>]``"
#~ msgstr "``@deprecated [<some text>]``"

#~ msgid "The @deprecated tag marks a symbol in your code as being deprecated."
#~ msgstr "@deprecated标记将代码中的符号标记为已弃用. "

#~ msgid ""
#~ "You can use the @deprecated tag by"
#~ " itself, or include some text that"
#~ " describes more about the deprecation."
#~ msgstr "您可以单独使用@deprecated标记, 也可以包含一些描述弃用更多信息的文本. "

#~ msgid "Document that the old function has been deprecated since version 2.0"
#~ msgstr "记录自2.0版以来旧函数已弃用的文档"

#~ msgid "@file"
#~ msgstr "@file"

#~ msgid "@fires"
#~ msgstr "@fires"

#~ msgid ""
#~ "In the following example, the "
#~ "``Clothes`` namespace contains a ``Jacket``"
#~ " class. The ``@ignore`` tag must be"
#~ " added to both ``Clothes`` and "
#~ "``Clothes.Jacket``. ``Clothes``, ``Clothes.Jacket``, "
#~ "and ``Clothes.Jacket#color`` will not appear"
#~ " in the documentation."
#~ msgstr ""
#~ "在下面的例子中, ``Clothes``命名空间包含一个``Jacket``类. 必须将 "
#~ "``@ignore``标签添加到``Clothes``和``Clothes.Jacket``中.  ``衣服``, "
#~ "``Clothes.Jacket``和``Clothes.Jacket #color``将不会出现在文档中. "

#~ msgid "@inline-link"
#~ msgstr "@inline-link"

#~ msgid "@member"
#~ msgstr "@member"

#~ msgid "@param"
#~ msgstr "@param"

#~ msgid "Names, types, and descriptions"
#~ msgstr "名称, 类型和说明"

#~ msgid "Parameters with properties"
#~ msgstr "具有属性的参数"

#~ msgid "Optional parameters and default values"
#~ msgstr "可选参数和默认值"

#~ msgid "Multiple types and repeatable parameters"
#~ msgstr "Multiple types and repeatable parameters"

#~ msgid "Callback functions"
#~ msgstr "Callback functions"

#~ msgid "@return"
#~ msgstr "@return"

#~ msgid "@throws"
#~ msgstr "@throws"

#~ msgid "@yields"
#~ msgstr "@yields"

#~ msgid ""
#~ "With the `Closure Compiler "
#~ "<https://github.com/google/closure-compiler/wiki/Annotating-"
#~ "JavaScript-for-the-Closure-Compiler#jsdoc-"
#~ "tags>`__ tag dictionary:"
#~ msgstr ""
#~ "使用`Closure Compiler <https://github.com/google/closure-"
#~ "compiler/wiki/Annotating-JavaScript-for-the-"
#~ "Closure-Compiler#jsdoc-tags>`__标签字典: "

#~ msgid ":rst:dir:`@interface`"
#~ msgstr ""

#~ msgid ""
#~ "**Warning**: By using the @name tag, "
#~ "you are telling JSDoc to *ignore "
#~ "the surrounding code* and treat your "
#~ "documentation comment in isolation. In "
#~ "many cases, it is best to use "
#~ "the [@alias tag]\\ `alias-tag <tags-"
#~ "alias.html>`__ instead, which changes a "
#~ "symbol’s name in the documentation but"
#~ " preserves other information about the "
#~ "symbol."
#~ msgstr ""
#~ "**警告**: 通过使用@name标记, 您告诉JSDoc *忽略周围的代码*并单独处理您的文档注释."
#~ " 在许多情况下, 最好使用[@alias tag] \\`alias-tag "
#~ "<tags-alias.html>`__代替, 它会更改文档中的符号名称, "
#~ "但会保留有关该符号的其他信息. "

#~ msgid ":rst:dir:`@package`"
#~ msgstr ""

#~ msgid ""
#~ "The parameter type can be a "
#~ "built-in JavaScript type, such as "
#~ "``string`` or ``Object``, or a `JSDoc"
#~ " namepath <about-namepaths.html>`__ to "
#~ "another symbol in your code. If "
#~ "you have written documentation for the"
#~ " symbol at that namepath, JSDoc will"
#~ " automatically link to the documentation"
#~ " for that symbol. You can also "
#~ "use a type expression to indicate, "
#~ "for example, that a parameter is "
#~ "not nullable or can accept any "
#~ "type; see the `@type  tag documentation"
#~ " <tags-type.html>`__ for details."
#~ msgstr ""
#~ "参数类型可以是内置JavaScript类型, 例如``string``或``Object``, 或者`JSDoc"
#~ " namepath <about-namepaths.html>`__代码中的另一个符号. "
#~ "如果您在该namepath上有符号的书面文档, JSDoc将自动链接到该符号的文档. 您还可以使用类型表达式来指示,"
#~ " 例如, 参数不可为空或可以接受任何类型;有关详细信息, 请参阅`@type标记文档<tags-"
#~ "type.html>`__. "

#~ msgid ":rst:dir:`@private`"
#~ msgstr ""

#~ msgid ":rst:dir:`@protected`"
#~ msgstr ""

